/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the StatsData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatsData{}

// StatsData struct for StatsData
type StatsData struct {
	Conid    *float32 `json:"Conid,omitempty"`
	Exchange *string  `json:"Exchange,omitempty"`
	V        *float32 `json:"V,omitempty"`
	T        *float32 `json:"T,omitempty"`
	TT       *float32 `json:"TT,omitempty"`
	// Object, payload depends on event type. See confluence page for IGEvntUpd.
	P *string `json:"P,omitempty"`
}

// NewStatsData instantiates a new StatsData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsData() *StatsData {
	this := StatsData{}
	return &this
}

// NewStatsDataWithDefaults instantiates a new StatsData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsDataWithDefaults() *StatsData {
	this := StatsData{}
	return &this
}

// GetConid returns the Conid field value if set, zero value otherwise.
func (o *StatsData) GetConid() float32 {
	if o == nil || IsNil(o.Conid) {
		var ret float32
		return ret
	}
	return *o.Conid
}

// GetConidOk returns a tuple with the Conid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetConidOk() (*float32, bool) {
	if o == nil || IsNil(o.Conid) {
		return nil, false
	}
	return o.Conid, true
}

// HasConid returns a boolean if a field has been set.
func (o *StatsData) HasConid() bool {
	if o != nil && !IsNil(o.Conid) {
		return true
	}

	return false
}

// SetConid gets a reference to the given float32 and assigns it to the Conid field.
func (o *StatsData) SetConid(v float32) {
	o.Conid = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *StatsData) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *StatsData) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *StatsData) SetExchange(v string) {
	o.Exchange = &v
}

// GetV returns the V field value if set, zero value otherwise.
func (o *StatsData) GetV() float32 {
	if o == nil || IsNil(o.V) {
		var ret float32
		return ret
	}
	return *o.V
}

// GetVOk returns a tuple with the V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetVOk() (*float32, bool) {
	if o == nil || IsNil(o.V) {
		return nil, false
	}
	return o.V, true
}

// HasV returns a boolean if a field has been set.
func (o *StatsData) HasV() bool {
	if o != nil && !IsNil(o.V) {
		return true
	}

	return false
}

// SetV gets a reference to the given float32 and assigns it to the V field.
func (o *StatsData) SetV(v float32) {
	o.V = &v
}

// GetT returns the T field value if set, zero value otherwise.
func (o *StatsData) GetT() float32 {
	if o == nil || IsNil(o.T) {
		var ret float32
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetTOk() (*float32, bool) {
	if o == nil || IsNil(o.T) {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *StatsData) HasT() bool {
	if o != nil && !IsNil(o.T) {
		return true
	}

	return false
}

// SetT gets a reference to the given float32 and assigns it to the T field.
func (o *StatsData) SetT(v float32) {
	o.T = &v
}

// GetTT returns the TT field value if set, zero value otherwise.
func (o *StatsData) GetTT() float32 {
	if o == nil || IsNil(o.TT) {
		var ret float32
		return ret
	}
	return *o.TT
}

// GetTTOk returns a tuple with the TT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetTTOk() (*float32, bool) {
	if o == nil || IsNil(o.TT) {
		return nil, false
	}
	return o.TT, true
}

// HasTT returns a boolean if a field has been set.
func (o *StatsData) HasTT() bool {
	if o != nil && !IsNil(o.TT) {
		return true
	}

	return false
}

// SetTT gets a reference to the given float32 and assigns it to the TT field.
func (o *StatsData) SetTT(v float32) {
	o.TT = &v
}

// GetP returns the P field value if set, zero value otherwise.
func (o *StatsData) GetP() string {
	if o == nil || IsNil(o.P) {
		var ret string
		return ret
	}
	return *o.P
}

// GetPOk returns a tuple with the P field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsData) GetPOk() (*string, bool) {
	if o == nil || IsNil(o.P) {
		return nil, false
	}
	return o.P, true
}

// HasP returns a boolean if a field has been set.
func (o *StatsData) HasP() bool {
	if o != nil && !IsNil(o.P) {
		return true
	}

	return false
}

// SetP gets a reference to the given string and assigns it to the P field.
func (o *StatsData) SetP(v string) {
	o.P = &v
}

func (o StatsData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conid) {
		toSerialize["Conid"] = o.Conid
	}
	if !IsNil(o.Exchange) {
		toSerialize["Exchange"] = o.Exchange
	}
	if !IsNil(o.V) {
		toSerialize["V"] = o.V
	}
	if !IsNil(o.T) {
		toSerialize["T"] = o.T
	}
	if !IsNil(o.TT) {
		toSerialize["TT"] = o.TT
	}
	if !IsNil(o.P) {
		toSerialize["P"] = o.P
	}
	return toSerialize, nil
}

type NullableStatsData struct {
	value *StatsData
	isSet bool
}

func (v NullableStatsData) Get() *StatsData {
	return v.value
}

func (v *NullableStatsData) Set(val *StatsData) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsData) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsData(val *StatsData) *NullableStatsData {
	return &NullableStatsData{value: val, isSet: true}
}

func (v NullableStatsData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
