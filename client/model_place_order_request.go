/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PlaceOrderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaceOrderRequest{}

// PlaceOrderRequest struct for PlaceOrderRequest
type PlaceOrderRequest struct {
	// Notes for bracket orders: 1. Children orders will not have its own \"cOID\", so please donot pass \"cOID\" parameter in child order.Instead, they will have a \"parentId\" which must be equal to \"cOID\" of parent. 2. When you cancel a parent order, it will cancel all bracket orders, when you cancel one child order, it will also cancel its sibling order.
	Orders []OrderRequest `json:"orders,omitempty"`
}

// NewPlaceOrderRequest instantiates a new PlaceOrderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceOrderRequest() *PlaceOrderRequest {
	this := PlaceOrderRequest{}
	return &this
}

// NewPlaceOrderRequestWithDefaults instantiates a new PlaceOrderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceOrderRequestWithDefaults() *PlaceOrderRequest {
	this := PlaceOrderRequest{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *PlaceOrderRequest) GetOrders() []OrderRequest {
	if o == nil || IsNil(o.Orders) {
		var ret []OrderRequest
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceOrderRequest) GetOrdersOk() ([]OrderRequest, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *PlaceOrderRequest) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []OrderRequest and assigns it to the Orders field.
func (o *PlaceOrderRequest) SetOrders(v []OrderRequest) {
	o.Orders = v
}

func (o PlaceOrderRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaceOrderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	return toSerialize, nil
}

type NullablePlaceOrderRequest struct {
	value *PlaceOrderRequest
	isSet bool
}

func (v NullablePlaceOrderRequest) Get() *PlaceOrderRequest {
	return v.value
}

func (v *NullablePlaceOrderRequest) Set(val *PlaceOrderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceOrderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceOrderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceOrderRequest(val *PlaceOrderRequest) *NullablePlaceOrderRequest {
	return &NullablePlaceOrderRequest{value: val, isSet: true}
}

func (v NullablePlaceOrderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceOrderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
