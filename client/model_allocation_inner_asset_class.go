/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AllocationInnerAssetClass type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocationInnerAssetClass{}

// AllocationInnerAssetClass portfolio allocation by asset class
type AllocationInnerAssetClass struct {
	Long  *AllocationInnerAssetClassLong  `json:"long,omitempty"`
	Short *AllocationInnerAssetClassShort `json:"short,omitempty"`
}

// NewAllocationInnerAssetClass instantiates a new AllocationInnerAssetClass object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationInnerAssetClass() *AllocationInnerAssetClass {
	this := AllocationInnerAssetClass{}
	return &this
}

// NewAllocationInnerAssetClassWithDefaults instantiates a new AllocationInnerAssetClass object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationInnerAssetClassWithDefaults() *AllocationInnerAssetClass {
	this := AllocationInnerAssetClass{}
	return &this
}

// GetLong returns the Long field value if set, zero value otherwise.
func (o *AllocationInnerAssetClass) GetLong() AllocationInnerAssetClassLong {
	if o == nil || IsNil(o.Long) {
		var ret AllocationInnerAssetClassLong
		return ret
	}
	return *o.Long
}

// GetLongOk returns a tuple with the Long field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerAssetClass) GetLongOk() (*AllocationInnerAssetClassLong, bool) {
	if o == nil || IsNil(o.Long) {
		return nil, false
	}
	return o.Long, true
}

// HasLong returns a boolean if a field has been set.
func (o *AllocationInnerAssetClass) HasLong() bool {
	if o != nil && !IsNil(o.Long) {
		return true
	}

	return false
}

// SetLong gets a reference to the given AllocationInnerAssetClassLong and assigns it to the Long field.
func (o *AllocationInnerAssetClass) SetLong(v AllocationInnerAssetClassLong) {
	o.Long = &v
}

// GetShort returns the Short field value if set, zero value otherwise.
func (o *AllocationInnerAssetClass) GetShort() AllocationInnerAssetClassShort {
	if o == nil || IsNil(o.Short) {
		var ret AllocationInnerAssetClassShort
		return ret
	}
	return *o.Short
}

// GetShortOk returns a tuple with the Short field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerAssetClass) GetShortOk() (*AllocationInnerAssetClassShort, bool) {
	if o == nil || IsNil(o.Short) {
		return nil, false
	}
	return o.Short, true
}

// HasShort returns a boolean if a field has been set.
func (o *AllocationInnerAssetClass) HasShort() bool {
	if o != nil && !IsNil(o.Short) {
		return true
	}

	return false
}

// SetShort gets a reference to the given AllocationInnerAssetClassShort and assigns it to the Short field.
func (o *AllocationInnerAssetClass) SetShort(v AllocationInnerAssetClassShort) {
	o.Short = &v
}

func (o AllocationInnerAssetClass) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocationInnerAssetClass) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Long) {
		toSerialize["long"] = o.Long
	}
	if !IsNil(o.Short) {
		toSerialize["short"] = o.Short
	}
	return toSerialize, nil
}

type NullableAllocationInnerAssetClass struct {
	value *AllocationInnerAssetClass
	isSet bool
}

func (v NullableAllocationInnerAssetClass) Get() *AllocationInnerAssetClass {
	return v.value
}

func (v *NullableAllocationInnerAssetClass) Set(val *AllocationInnerAssetClass) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationInnerAssetClass) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationInnerAssetClass) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationInnerAssetClass(val *AllocationInnerAssetClass) *NullableAllocationInnerAssetClass {
	return &NullableAllocationInnerAssetClass{value: val, isSet: true}
}

func (v NullableAllocationInnerAssetClass) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationInnerAssetClass) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
