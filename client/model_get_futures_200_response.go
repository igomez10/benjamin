/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetFutures200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFutures200Response{}

// GetFutures200Response struct for GetFutures200Response
type GetFutures200Response struct {
	Symbol []FuturesInner `json:"symbol,omitempty"`
}

// NewGetFutures200Response instantiates a new GetFutures200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFutures200Response() *GetFutures200Response {
	this := GetFutures200Response{}
	return &this
}

// NewGetFutures200ResponseWithDefaults instantiates a new GetFutures200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFutures200ResponseWithDefaults() *GetFutures200Response {
	this := GetFutures200Response{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetFutures200Response) GetSymbol() []FuturesInner {
	if o == nil || IsNil(o.Symbol) {
		var ret []FuturesInner
		return ret
	}
	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFutures200Response) GetSymbolOk() ([]FuturesInner, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetFutures200Response) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given []FuturesInner and assigns it to the Symbol field.
func (o *GetFutures200Response) SetSymbol(v []FuturesInner) {
	o.Symbol = v
}

func (o GetFutures200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFutures200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableGetFutures200Response struct {
	value *GetFutures200Response
	isSet bool
}

func (v NullableGetFutures200Response) Get() *GetFutures200Response {
	return v.value
}

func (v *NullableGetFutures200Response) Set(val *GetFutures200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFutures200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFutures200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFutures200Response(val *GetFutures200Response) *NullableGetFutures200Response {
	return &NullableGetFutures200Response{value: val, isSet: true}
}

func (v NullableGetFutures200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFutures200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
