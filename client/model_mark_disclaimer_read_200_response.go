/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the MarkDisclaimerRead200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarkDisclaimerRead200Response{}

// MarkDisclaimerRead200Response struct for MarkDisclaimerRead200Response
type MarkDisclaimerRead200Response struct {
	T *int32 `json:"T,omitempty"`
	V *int32 `json:"V,omitempty"`
}

// NewMarkDisclaimerRead200Response instantiates a new MarkDisclaimerRead200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarkDisclaimerRead200Response() *MarkDisclaimerRead200Response {
	this := MarkDisclaimerRead200Response{}
	return &this
}

// NewMarkDisclaimerRead200ResponseWithDefaults instantiates a new MarkDisclaimerRead200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarkDisclaimerRead200ResponseWithDefaults() *MarkDisclaimerRead200Response {
	this := MarkDisclaimerRead200Response{}
	return &this
}

// GetT returns the T field value if set, zero value otherwise.
func (o *MarkDisclaimerRead200Response) GetT() int32 {
	if o == nil || IsNil(o.T) {
		var ret int32
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarkDisclaimerRead200Response) GetTOk() (*int32, bool) {
	if o == nil || IsNil(o.T) {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *MarkDisclaimerRead200Response) HasT() bool {
	if o != nil && !IsNil(o.T) {
		return true
	}

	return false
}

// SetT gets a reference to the given int32 and assigns it to the T field.
func (o *MarkDisclaimerRead200Response) SetT(v int32) {
	o.T = &v
}

// GetV returns the V field value if set, zero value otherwise.
func (o *MarkDisclaimerRead200Response) GetV() int32 {
	if o == nil || IsNil(o.V) {
		var ret int32
		return ret
	}
	return *o.V
}

// GetVOk returns a tuple with the V field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarkDisclaimerRead200Response) GetVOk() (*int32, bool) {
	if o == nil || IsNil(o.V) {
		return nil, false
	}
	return o.V, true
}

// HasV returns a boolean if a field has been set.
func (o *MarkDisclaimerRead200Response) HasV() bool {
	if o != nil && !IsNil(o.V) {
		return true
	}

	return false
}

// SetV gets a reference to the given int32 and assigns it to the V field.
func (o *MarkDisclaimerRead200Response) SetV(v int32) {
	o.V = &v
}

func (o MarkDisclaimerRead200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarkDisclaimerRead200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.T) {
		toSerialize["T"] = o.T
	}
	if !IsNil(o.V) {
		toSerialize["V"] = o.V
	}
	return toSerialize, nil
}

type NullableMarkDisclaimerRead200Response struct {
	value *MarkDisclaimerRead200Response
	isSet bool
}

func (v NullableMarkDisclaimerRead200Response) Get() *MarkDisclaimerRead200Response {
	return v.value
}

func (v *NullableMarkDisclaimerRead200Response) Set(val *MarkDisclaimerRead200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMarkDisclaimerRead200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMarkDisclaimerRead200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarkDisclaimerRead200Response(val *MarkDisclaimerRead200Response) *NullableMarkDisclaimerRead200Response {
	return &NullableMarkDisclaimerRead200Response{value: val, isSet: true}
}

func (v NullableMarkDisclaimerRead200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarkDisclaimerRead200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
