/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AlertRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertRequest{}

// AlertRequest struct for AlertRequest
type AlertRequest struct {
	// orderId is required when modifying alert. You can get it from /iserver/account/{accountId}/alerts
	OrderId *int32 `json:"orderId,omitempty"`
	// name of alert
	AlertName *string `json:"alertName,omitempty"`
	// The message you want to receive via email or text message
	AlertMessage *string `json:"alertMessage,omitempty"`
	// whether alert is repeatable or not, so value can only be 0 or 1, this has to be 1 for MTA alert
	AlertRepeatable *int32 `json:"alertRepeatable,omitempty"`
	// email address to receive alert
	Email *string `json:"email,omitempty"`
	// whether allowing to send email or not, so value can only be 0 or 1,
	SendMessage *int32 `json:"sendMessage,omitempty"`
	// time in force, can only be GTC or GTD
	Tif *string `json:"tif,omitempty"`
	// format, YYYYMMDD-HH:mm:ss, please NOTE this will only work when tif is GTD
	ExpireTime *string `json:"expireTime,omitempty"`
	// value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading hours.
	OutsideRth *int32 `json:"outsideRth,omitempty"`
	// value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile
	ITWSOrdersOnly *int32 `json:"iTWSOrdersOnly,omitempty"`
	// value can only be 0 or 1, set to 1 to allow to show alert in pop-ups
	ShowPopup *int32 `json:"showPopup,omitempty"`
	// for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert
	ToolId *int32 `json:"toolId,omitempty"`
	// audio message to play when alert is triggered
	PlayAudio  *string                       `json:"playAudio,omitempty"`
	Conditions []AlertRequestConditionsInner `json:"conditions,omitempty"`
}

// NewAlertRequest instantiates a new AlertRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertRequest() *AlertRequest {
	this := AlertRequest{}
	return &this
}

// NewAlertRequestWithDefaults instantiates a new AlertRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertRequestWithDefaults() *AlertRequest {
	this := AlertRequest{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *AlertRequest) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *AlertRequest) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *AlertRequest) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetAlertName returns the AlertName field value if set, zero value otherwise.
func (o *AlertRequest) GetAlertName() string {
	if o == nil || IsNil(o.AlertName) {
		var ret string
		return ret
	}
	return *o.AlertName
}

// GetAlertNameOk returns a tuple with the AlertName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetAlertNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlertName) {
		return nil, false
	}
	return o.AlertName, true
}

// HasAlertName returns a boolean if a field has been set.
func (o *AlertRequest) HasAlertName() bool {
	if o != nil && !IsNil(o.AlertName) {
		return true
	}

	return false
}

// SetAlertName gets a reference to the given string and assigns it to the AlertName field.
func (o *AlertRequest) SetAlertName(v string) {
	o.AlertName = &v
}

// GetAlertMessage returns the AlertMessage field value if set, zero value otherwise.
func (o *AlertRequest) GetAlertMessage() string {
	if o == nil || IsNil(o.AlertMessage) {
		var ret string
		return ret
	}
	return *o.AlertMessage
}

// GetAlertMessageOk returns a tuple with the AlertMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetAlertMessageOk() (*string, bool) {
	if o == nil || IsNil(o.AlertMessage) {
		return nil, false
	}
	return o.AlertMessage, true
}

// HasAlertMessage returns a boolean if a field has been set.
func (o *AlertRequest) HasAlertMessage() bool {
	if o != nil && !IsNil(o.AlertMessage) {
		return true
	}

	return false
}

// SetAlertMessage gets a reference to the given string and assigns it to the AlertMessage field.
func (o *AlertRequest) SetAlertMessage(v string) {
	o.AlertMessage = &v
}

// GetAlertRepeatable returns the AlertRepeatable field value if set, zero value otherwise.
func (o *AlertRequest) GetAlertRepeatable() int32 {
	if o == nil || IsNil(o.AlertRepeatable) {
		var ret int32
		return ret
	}
	return *o.AlertRepeatable
}

// GetAlertRepeatableOk returns a tuple with the AlertRepeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetAlertRepeatableOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertRepeatable) {
		return nil, false
	}
	return o.AlertRepeatable, true
}

// HasAlertRepeatable returns a boolean if a field has been set.
func (o *AlertRequest) HasAlertRepeatable() bool {
	if o != nil && !IsNil(o.AlertRepeatable) {
		return true
	}

	return false
}

// SetAlertRepeatable gets a reference to the given int32 and assigns it to the AlertRepeatable field.
func (o *AlertRequest) SetAlertRepeatable(v int32) {
	o.AlertRepeatable = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AlertRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AlertRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AlertRequest) SetEmail(v string) {
	o.Email = &v
}

// GetSendMessage returns the SendMessage field value if set, zero value otherwise.
func (o *AlertRequest) GetSendMessage() int32 {
	if o == nil || IsNil(o.SendMessage) {
		var ret int32
		return ret
	}
	return *o.SendMessage
}

// GetSendMessageOk returns a tuple with the SendMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetSendMessageOk() (*int32, bool) {
	if o == nil || IsNil(o.SendMessage) {
		return nil, false
	}
	return o.SendMessage, true
}

// HasSendMessage returns a boolean if a field has been set.
func (o *AlertRequest) HasSendMessage() bool {
	if o != nil && !IsNil(o.SendMessage) {
		return true
	}

	return false
}

// SetSendMessage gets a reference to the given int32 and assigns it to the SendMessage field.
func (o *AlertRequest) SetSendMessage(v int32) {
	o.SendMessage = &v
}

// GetTif returns the Tif field value if set, zero value otherwise.
func (o *AlertRequest) GetTif() string {
	if o == nil || IsNil(o.Tif) {
		var ret string
		return ret
	}
	return *o.Tif
}

// GetTifOk returns a tuple with the Tif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetTifOk() (*string, bool) {
	if o == nil || IsNil(o.Tif) {
		return nil, false
	}
	return o.Tif, true
}

// HasTif returns a boolean if a field has been set.
func (o *AlertRequest) HasTif() bool {
	if o != nil && !IsNil(o.Tif) {
		return true
	}

	return false
}

// SetTif gets a reference to the given string and assigns it to the Tif field.
func (o *AlertRequest) SetTif(v string) {
	o.Tif = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *AlertRequest) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *AlertRequest) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *AlertRequest) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetOutsideRth returns the OutsideRth field value if set, zero value otherwise.
func (o *AlertRequest) GetOutsideRth() int32 {
	if o == nil || IsNil(o.OutsideRth) {
		var ret int32
		return ret
	}
	return *o.OutsideRth
}

// GetOutsideRthOk returns a tuple with the OutsideRth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetOutsideRthOk() (*int32, bool) {
	if o == nil || IsNil(o.OutsideRth) {
		return nil, false
	}
	return o.OutsideRth, true
}

// HasOutsideRth returns a boolean if a field has been set.
func (o *AlertRequest) HasOutsideRth() bool {
	if o != nil && !IsNil(o.OutsideRth) {
		return true
	}

	return false
}

// SetOutsideRth gets a reference to the given int32 and assigns it to the OutsideRth field.
func (o *AlertRequest) SetOutsideRth(v int32) {
	o.OutsideRth = &v
}

// GetITWSOrdersOnly returns the ITWSOrdersOnly field value if set, zero value otherwise.
func (o *AlertRequest) GetITWSOrdersOnly() int32 {
	if o == nil || IsNil(o.ITWSOrdersOnly) {
		var ret int32
		return ret
	}
	return *o.ITWSOrdersOnly
}

// GetITWSOrdersOnlyOk returns a tuple with the ITWSOrdersOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetITWSOrdersOnlyOk() (*int32, bool) {
	if o == nil || IsNil(o.ITWSOrdersOnly) {
		return nil, false
	}
	return o.ITWSOrdersOnly, true
}

// HasITWSOrdersOnly returns a boolean if a field has been set.
func (o *AlertRequest) HasITWSOrdersOnly() bool {
	if o != nil && !IsNil(o.ITWSOrdersOnly) {
		return true
	}

	return false
}

// SetITWSOrdersOnly gets a reference to the given int32 and assigns it to the ITWSOrdersOnly field.
func (o *AlertRequest) SetITWSOrdersOnly(v int32) {
	o.ITWSOrdersOnly = &v
}

// GetShowPopup returns the ShowPopup field value if set, zero value otherwise.
func (o *AlertRequest) GetShowPopup() int32 {
	if o == nil || IsNil(o.ShowPopup) {
		var ret int32
		return ret
	}
	return *o.ShowPopup
}

// GetShowPopupOk returns a tuple with the ShowPopup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetShowPopupOk() (*int32, bool) {
	if o == nil || IsNil(o.ShowPopup) {
		return nil, false
	}
	return o.ShowPopup, true
}

// HasShowPopup returns a boolean if a field has been set.
func (o *AlertRequest) HasShowPopup() bool {
	if o != nil && !IsNil(o.ShowPopup) {
		return true
	}

	return false
}

// SetShowPopup gets a reference to the given int32 and assigns it to the ShowPopup field.
func (o *AlertRequest) SetShowPopup(v int32) {
	o.ShowPopup = &v
}

// GetToolId returns the ToolId field value if set, zero value otherwise.
func (o *AlertRequest) GetToolId() int32 {
	if o == nil || IsNil(o.ToolId) {
		var ret int32
		return ret
	}
	return *o.ToolId
}

// GetToolIdOk returns a tuple with the ToolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetToolIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ToolId) {
		return nil, false
	}
	return o.ToolId, true
}

// HasToolId returns a boolean if a field has been set.
func (o *AlertRequest) HasToolId() bool {
	if o != nil && !IsNil(o.ToolId) {
		return true
	}

	return false
}

// SetToolId gets a reference to the given int32 and assigns it to the ToolId field.
func (o *AlertRequest) SetToolId(v int32) {
	o.ToolId = &v
}

// GetPlayAudio returns the PlayAudio field value if set, zero value otherwise.
func (o *AlertRequest) GetPlayAudio() string {
	if o == nil || IsNil(o.PlayAudio) {
		var ret string
		return ret
	}
	return *o.PlayAudio
}

// GetPlayAudioOk returns a tuple with the PlayAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetPlayAudioOk() (*string, bool) {
	if o == nil || IsNil(o.PlayAudio) {
		return nil, false
	}
	return o.PlayAudio, true
}

// HasPlayAudio returns a boolean if a field has been set.
func (o *AlertRequest) HasPlayAudio() bool {
	if o != nil && !IsNil(o.PlayAudio) {
		return true
	}

	return false
}

// SetPlayAudio gets a reference to the given string and assigns it to the PlayAudio field.
func (o *AlertRequest) SetPlayAudio(v string) {
	o.PlayAudio = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *AlertRequest) GetConditions() []AlertRequestConditionsInner {
	if o == nil || IsNil(o.Conditions) {
		var ret []AlertRequestConditionsInner
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertRequest) GetConditionsOk() ([]AlertRequestConditionsInner, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *AlertRequest) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []AlertRequestConditionsInner and assigns it to the Conditions field.
func (o *AlertRequest) SetConditions(v []AlertRequestConditionsInner) {
	o.Conditions = v
}

func (o AlertRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.AlertName) {
		toSerialize["alertName"] = o.AlertName
	}
	if !IsNil(o.AlertMessage) {
		toSerialize["alertMessage"] = o.AlertMessage
	}
	if !IsNil(o.AlertRepeatable) {
		toSerialize["alertRepeatable"] = o.AlertRepeatable
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.SendMessage) {
		toSerialize["sendMessage"] = o.SendMessage
	}
	if !IsNil(o.Tif) {
		toSerialize["tif"] = o.Tif
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expireTime"] = o.ExpireTime
	}
	if !IsNil(o.OutsideRth) {
		toSerialize["outsideRth"] = o.OutsideRth
	}
	if !IsNil(o.ITWSOrdersOnly) {
		toSerialize["iTWSOrdersOnly"] = o.ITWSOrdersOnly
	}
	if !IsNil(o.ShowPopup) {
		toSerialize["showPopup"] = o.ShowPopup
	}
	if !IsNil(o.ToolId) {
		toSerialize["toolId"] = o.ToolId
	}
	if !IsNil(o.PlayAudio) {
		toSerialize["playAudio"] = o.PlayAudio
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	return toSerialize, nil
}

type NullableAlertRequest struct {
	value *AlertRequest
	isSet bool
}

func (v NullableAlertRequest) Get() *AlertRequest {
	return v.value
}

func (v *NullableAlertRequest) Set(val *AlertRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertRequest(val *AlertRequest) *NullableAlertRequest {
	return &NullableAlertRequest{value: val, isSet: true}
}

func (v NullableAlertRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
