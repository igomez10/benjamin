/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AllocationInnerSectorLong type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocationInnerSectorLong{}

// AllocationInnerSectorLong long positions allocation
type AllocationInnerSectorLong struct {
	Others         *float32 `json:"Others,omitempty"`
	Utilities      *float32 `json:"Utilities,omitempty"`
	Energy         *float32 `json:"Energy,omitempty"`
	Technology     *float32 `json:"Technology,omitempty"`
	Financial      *float32 `json:"Financial,omitempty"`
	Communications *float32 `json:"Communications,omitempty"`
}

// NewAllocationInnerSectorLong instantiates a new AllocationInnerSectorLong object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationInnerSectorLong() *AllocationInnerSectorLong {
	this := AllocationInnerSectorLong{}
	return &this
}

// NewAllocationInnerSectorLongWithDefaults instantiates a new AllocationInnerSectorLong object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationInnerSectorLongWithDefaults() *AllocationInnerSectorLong {
	this := AllocationInnerSectorLong{}
	return &this
}

// GetOthers returns the Others field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetOthers() float32 {
	if o == nil || IsNil(o.Others) {
		var ret float32
		return ret
	}
	return *o.Others
}

// GetOthersOk returns a tuple with the Others field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetOthersOk() (*float32, bool) {
	if o == nil || IsNil(o.Others) {
		return nil, false
	}
	return o.Others, true
}

// HasOthers returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasOthers() bool {
	if o != nil && !IsNil(o.Others) {
		return true
	}

	return false
}

// SetOthers gets a reference to the given float32 and assigns it to the Others field.
func (o *AllocationInnerSectorLong) SetOthers(v float32) {
	o.Others = &v
}

// GetUtilities returns the Utilities field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetUtilities() float32 {
	if o == nil || IsNil(o.Utilities) {
		var ret float32
		return ret
	}
	return *o.Utilities
}

// GetUtilitiesOk returns a tuple with the Utilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetUtilitiesOk() (*float32, bool) {
	if o == nil || IsNil(o.Utilities) {
		return nil, false
	}
	return o.Utilities, true
}

// HasUtilities returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasUtilities() bool {
	if o != nil && !IsNil(o.Utilities) {
		return true
	}

	return false
}

// SetUtilities gets a reference to the given float32 and assigns it to the Utilities field.
func (o *AllocationInnerSectorLong) SetUtilities(v float32) {
	o.Utilities = &v
}

// GetEnergy returns the Energy field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetEnergy() float32 {
	if o == nil || IsNil(o.Energy) {
		var ret float32
		return ret
	}
	return *o.Energy
}

// GetEnergyOk returns a tuple with the Energy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetEnergyOk() (*float32, bool) {
	if o == nil || IsNil(o.Energy) {
		return nil, false
	}
	return o.Energy, true
}

// HasEnergy returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasEnergy() bool {
	if o != nil && !IsNil(o.Energy) {
		return true
	}

	return false
}

// SetEnergy gets a reference to the given float32 and assigns it to the Energy field.
func (o *AllocationInnerSectorLong) SetEnergy(v float32) {
	o.Energy = &v
}

// GetTechnology returns the Technology field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetTechnology() float32 {
	if o == nil || IsNil(o.Technology) {
		var ret float32
		return ret
	}
	return *o.Technology
}

// GetTechnologyOk returns a tuple with the Technology field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetTechnologyOk() (*float32, bool) {
	if o == nil || IsNil(o.Technology) {
		return nil, false
	}
	return o.Technology, true
}

// HasTechnology returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasTechnology() bool {
	if o != nil && !IsNil(o.Technology) {
		return true
	}

	return false
}

// SetTechnology gets a reference to the given float32 and assigns it to the Technology field.
func (o *AllocationInnerSectorLong) SetTechnology(v float32) {
	o.Technology = &v
}

// GetFinancial returns the Financial field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetFinancial() float32 {
	if o == nil || IsNil(o.Financial) {
		var ret float32
		return ret
	}
	return *o.Financial
}

// GetFinancialOk returns a tuple with the Financial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetFinancialOk() (*float32, bool) {
	if o == nil || IsNil(o.Financial) {
		return nil, false
	}
	return o.Financial, true
}

// HasFinancial returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasFinancial() bool {
	if o != nil && !IsNil(o.Financial) {
		return true
	}

	return false
}

// SetFinancial gets a reference to the given float32 and assigns it to the Financial field.
func (o *AllocationInnerSectorLong) SetFinancial(v float32) {
	o.Financial = &v
}

// GetCommunications returns the Communications field value if set, zero value otherwise.
func (o *AllocationInnerSectorLong) GetCommunications() float32 {
	if o == nil || IsNil(o.Communications) {
		var ret float32
		return ret
	}
	return *o.Communications
}

// GetCommunicationsOk returns a tuple with the Communications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorLong) GetCommunicationsOk() (*float32, bool) {
	if o == nil || IsNil(o.Communications) {
		return nil, false
	}
	return o.Communications, true
}

// HasCommunications returns a boolean if a field has been set.
func (o *AllocationInnerSectorLong) HasCommunications() bool {
	if o != nil && !IsNil(o.Communications) {
		return true
	}

	return false
}

// SetCommunications gets a reference to the given float32 and assigns it to the Communications field.
func (o *AllocationInnerSectorLong) SetCommunications(v float32) {
	o.Communications = &v
}

func (o AllocationInnerSectorLong) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocationInnerSectorLong) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Others) {
		toSerialize["Others"] = o.Others
	}
	if !IsNil(o.Utilities) {
		toSerialize["Utilities"] = o.Utilities
	}
	if !IsNil(o.Energy) {
		toSerialize["Energy"] = o.Energy
	}
	if !IsNil(o.Technology) {
		toSerialize["Technology"] = o.Technology
	}
	if !IsNil(o.Financial) {
		toSerialize["Financial"] = o.Financial
	}
	if !IsNil(o.Communications) {
		toSerialize["Communications"] = o.Communications
	}
	return toSerialize, nil
}

type NullableAllocationInnerSectorLong struct {
	value *AllocationInnerSectorLong
	isSet bool
}

func (v NullableAllocationInnerSectorLong) Get() *AllocationInnerSectorLong {
	return v.value
}

func (v *NullableAllocationInnerSectorLong) Set(val *AllocationInnerSectorLong) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationInnerSectorLong) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationInnerSectorLong) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationInnerSectorLong(val *AllocationInnerSectorLong) *NullableAllocationInnerSectorLong {
	return &NullableAllocationInnerSectorLong{value: val, isSet: true}
}

func (v NullableAllocationInnerSectorLong) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationInnerSectorLong) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
