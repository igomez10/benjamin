/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the OrderData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderData{}

// OrderData struct for OrderData
type OrderData struct {
	ClientOrderId *string `json:"clientOrderId,omitempty"`
	ExecId        *string `json:"execId,omitempty"`
	ExecType      *string `json:"execType,omitempty"`
	OrderType     *string `json:"orderType,omitempty"`
	OrderStatus   *string `json:"orderStatus,omitempty"`
	// Underlying symbol for contract
	Symbol *string `json:"symbol,omitempty"`
	// Quantity of active order
	OrderQty *string `json:"orderQty,omitempty"`
	// Price of active order
	Price *string `json:"price,omitempty"`
	// Quantity of the last partial fill
	LastShares *string `json:"lastShares,omitempty"`
	// Price of the last partial fill
	LastPrice *string `json:"lastPrice,omitempty"`
	// Cumulative fill quantity
	CumQty *string `json:"cumQty,omitempty"`
	// Remaining quantity to be filled
	LeavesQty *string `json:"leavesQty,omitempty"`
	// Average fill price
	AvgPrice *string `json:"avgPrice,omitempty"`
	Side     *string `json:"side,omitempty"`
	// Order identifier
	OrderId *string `json:"orderId,omitempty"`
	// Account number
	Account *string `json:"account,omitempty"`
	// Contracts asset class
	SecType *string `json:"secType,omitempty"`
	// Time of transaction in GMT, format YYYYMMDD-hh:m:ss
	TxTime *string `json:"txTime,omitempty"`
	// Time of receipt in GMT, format YYYYMMDD-hh:mm:ss
	RcptTime *string `json:"rcptTime,omitempty"`
	// Time in Force
	Tif *string `json:"tif,omitempty"`
	// Contract identifier from IBKR's database.
	Conid *string `json:"conid,omitempty"`
	// Trading currency
	Currency *string `json:"currency,omitempty"`
	// Exchange or venue
	Exchange *string `json:"exchange,omitempty"`
	// Listing Exchange
	ListingExchange *string `json:"listingExchange,omitempty"`
	// error message
	Text     *float32           `json:"text,omitempty"`
	Warnings *OrderDataWarnings `json:"warnings,omitempty"`
	// Commission currency
	CommCurr *string `json:"commCurr,omitempty"`
	// Commissions
	Comms *string `json:"comms,omitempty"`
	// Realized PnL
	RealizedPnl *string `json:"realizedPnl,omitempty"`
}

// NewOrderData instantiates a new OrderData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderData() *OrderData {
	this := OrderData{}
	return &this
}

// NewOrderDataWithDefaults instantiates a new OrderData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderDataWithDefaults() *OrderData {
	this := OrderData{}
	return &this
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *OrderData) GetClientOrderId() string {
	if o == nil || IsNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetClientOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientOrderId) {
		return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *OrderData) HasClientOrderId() bool {
	if o != nil && !IsNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *OrderData) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetExecId returns the ExecId field value if set, zero value otherwise.
func (o *OrderData) GetExecId() string {
	if o == nil || IsNil(o.ExecId) {
		var ret string
		return ret
	}
	return *o.ExecId
}

// GetExecIdOk returns a tuple with the ExecId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetExecIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecId) {
		return nil, false
	}
	return o.ExecId, true
}

// HasExecId returns a boolean if a field has been set.
func (o *OrderData) HasExecId() bool {
	if o != nil && !IsNil(o.ExecId) {
		return true
	}

	return false
}

// SetExecId gets a reference to the given string and assigns it to the ExecId field.
func (o *OrderData) SetExecId(v string) {
	o.ExecId = &v
}

// GetExecType returns the ExecType field value if set, zero value otherwise.
func (o *OrderData) GetExecType() string {
	if o == nil || IsNil(o.ExecType) {
		var ret string
		return ret
	}
	return *o.ExecType
}

// GetExecTypeOk returns a tuple with the ExecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetExecTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExecType) {
		return nil, false
	}
	return o.ExecType, true
}

// HasExecType returns a boolean if a field has been set.
func (o *OrderData) HasExecType() bool {
	if o != nil && !IsNil(o.ExecType) {
		return true
	}

	return false
}

// SetExecType gets a reference to the given string and assigns it to the ExecType field.
func (o *OrderData) SetExecType(v string) {
	o.ExecType = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *OrderData) GetOrderType() string {
	if o == nil || IsNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetOrderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *OrderData) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *OrderData) SetOrderType(v string) {
	o.OrderType = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *OrderData) GetOrderStatus() string {
	if o == nil || IsNil(o.OrderStatus) {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *OrderData) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *OrderData) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OrderData) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OrderData) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *OrderData) SetSymbol(v string) {
	o.Symbol = &v
}

// GetOrderQty returns the OrderQty field value if set, zero value otherwise.
func (o *OrderData) GetOrderQty() string {
	if o == nil || IsNil(o.OrderQty) {
		var ret string
		return ret
	}
	return *o.OrderQty
}

// GetOrderQtyOk returns a tuple with the OrderQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetOrderQtyOk() (*string, bool) {
	if o == nil || IsNil(o.OrderQty) {
		return nil, false
	}
	return o.OrderQty, true
}

// HasOrderQty returns a boolean if a field has been set.
func (o *OrderData) HasOrderQty() bool {
	if o != nil && !IsNil(o.OrderQty) {
		return true
	}

	return false
}

// SetOrderQty gets a reference to the given string and assigns it to the OrderQty field.
func (o *OrderData) SetOrderQty(v string) {
	o.OrderQty = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OrderData) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OrderData) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *OrderData) SetPrice(v string) {
	o.Price = &v
}

// GetLastShares returns the LastShares field value if set, zero value otherwise.
func (o *OrderData) GetLastShares() string {
	if o == nil || IsNil(o.LastShares) {
		var ret string
		return ret
	}
	return *o.LastShares
}

// GetLastSharesOk returns a tuple with the LastShares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetLastSharesOk() (*string, bool) {
	if o == nil || IsNil(o.LastShares) {
		return nil, false
	}
	return o.LastShares, true
}

// HasLastShares returns a boolean if a field has been set.
func (o *OrderData) HasLastShares() bool {
	if o != nil && !IsNil(o.LastShares) {
		return true
	}

	return false
}

// SetLastShares gets a reference to the given string and assigns it to the LastShares field.
func (o *OrderData) SetLastShares(v string) {
	o.LastShares = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *OrderData) GetLastPrice() string {
	if o == nil || IsNil(o.LastPrice) {
		var ret string
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetLastPriceOk() (*string, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *OrderData) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given string and assigns it to the LastPrice field.
func (o *OrderData) SetLastPrice(v string) {
	o.LastPrice = &v
}

// GetCumQty returns the CumQty field value if set, zero value otherwise.
func (o *OrderData) GetCumQty() string {
	if o == nil || IsNil(o.CumQty) {
		var ret string
		return ret
	}
	return *o.CumQty
}

// GetCumQtyOk returns a tuple with the CumQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetCumQtyOk() (*string, bool) {
	if o == nil || IsNil(o.CumQty) {
		return nil, false
	}
	return o.CumQty, true
}

// HasCumQty returns a boolean if a field has been set.
func (o *OrderData) HasCumQty() bool {
	if o != nil && !IsNil(o.CumQty) {
		return true
	}

	return false
}

// SetCumQty gets a reference to the given string and assigns it to the CumQty field.
func (o *OrderData) SetCumQty(v string) {
	o.CumQty = &v
}

// GetLeavesQty returns the LeavesQty field value if set, zero value otherwise.
func (o *OrderData) GetLeavesQty() string {
	if o == nil || IsNil(o.LeavesQty) {
		var ret string
		return ret
	}
	return *o.LeavesQty
}

// GetLeavesQtyOk returns a tuple with the LeavesQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetLeavesQtyOk() (*string, bool) {
	if o == nil || IsNil(o.LeavesQty) {
		return nil, false
	}
	return o.LeavesQty, true
}

// HasLeavesQty returns a boolean if a field has been set.
func (o *OrderData) HasLeavesQty() bool {
	if o != nil && !IsNil(o.LeavesQty) {
		return true
	}

	return false
}

// SetLeavesQty gets a reference to the given string and assigns it to the LeavesQty field.
func (o *OrderData) SetLeavesQty(v string) {
	o.LeavesQty = &v
}

// GetAvgPrice returns the AvgPrice field value if set, zero value otherwise.
func (o *OrderData) GetAvgPrice() string {
	if o == nil || IsNil(o.AvgPrice) {
		var ret string
		return ret
	}
	return *o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetAvgPriceOk() (*string, bool) {
	if o == nil || IsNil(o.AvgPrice) {
		return nil, false
	}
	return o.AvgPrice, true
}

// HasAvgPrice returns a boolean if a field has been set.
func (o *OrderData) HasAvgPrice() bool {
	if o != nil && !IsNil(o.AvgPrice) {
		return true
	}

	return false
}

// SetAvgPrice gets a reference to the given string and assigns it to the AvgPrice field.
func (o *OrderData) SetAvgPrice(v string) {
	o.AvgPrice = &v
}

// GetSide returns the Side field value if set, zero value otherwise.
func (o *OrderData) GetSide() string {
	if o == nil || IsNil(o.Side) {
		var ret string
		return ret
	}
	return *o.Side
}

// GetSideOk returns a tuple with the Side field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetSideOk() (*string, bool) {
	if o == nil || IsNil(o.Side) {
		return nil, false
	}
	return o.Side, true
}

// HasSide returns a boolean if a field has been set.
func (o *OrderData) HasSide() bool {
	if o != nil && !IsNil(o.Side) {
		return true
	}

	return false
}

// SetSide gets a reference to the given string and assigns it to the Side field.
func (o *OrderData) SetSide(v string) {
	o.Side = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OrderData) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OrderData) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OrderData) SetOrderId(v string) {
	o.OrderId = &v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *OrderData) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *OrderData) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *OrderData) SetAccount(v string) {
	o.Account = &v
}

// GetSecType returns the SecType field value if set, zero value otherwise.
func (o *OrderData) GetSecType() string {
	if o == nil || IsNil(o.SecType) {
		var ret string
		return ret
	}
	return *o.SecType
}

// GetSecTypeOk returns a tuple with the SecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetSecTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SecType) {
		return nil, false
	}
	return o.SecType, true
}

// HasSecType returns a boolean if a field has been set.
func (o *OrderData) HasSecType() bool {
	if o != nil && !IsNil(o.SecType) {
		return true
	}

	return false
}

// SetSecType gets a reference to the given string and assigns it to the SecType field.
func (o *OrderData) SetSecType(v string) {
	o.SecType = &v
}

// GetTxTime returns the TxTime field value if set, zero value otherwise.
func (o *OrderData) GetTxTime() string {
	if o == nil || IsNil(o.TxTime) {
		var ret string
		return ret
	}
	return *o.TxTime
}

// GetTxTimeOk returns a tuple with the TxTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetTxTimeOk() (*string, bool) {
	if o == nil || IsNil(o.TxTime) {
		return nil, false
	}
	return o.TxTime, true
}

// HasTxTime returns a boolean if a field has been set.
func (o *OrderData) HasTxTime() bool {
	if o != nil && !IsNil(o.TxTime) {
		return true
	}

	return false
}

// SetTxTime gets a reference to the given string and assigns it to the TxTime field.
func (o *OrderData) SetTxTime(v string) {
	o.TxTime = &v
}

// GetRcptTime returns the RcptTime field value if set, zero value otherwise.
func (o *OrderData) GetRcptTime() string {
	if o == nil || IsNil(o.RcptTime) {
		var ret string
		return ret
	}
	return *o.RcptTime
}

// GetRcptTimeOk returns a tuple with the RcptTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetRcptTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RcptTime) {
		return nil, false
	}
	return o.RcptTime, true
}

// HasRcptTime returns a boolean if a field has been set.
func (o *OrderData) HasRcptTime() bool {
	if o != nil && !IsNil(o.RcptTime) {
		return true
	}

	return false
}

// SetRcptTime gets a reference to the given string and assigns it to the RcptTime field.
func (o *OrderData) SetRcptTime(v string) {
	o.RcptTime = &v
}

// GetTif returns the Tif field value if set, zero value otherwise.
func (o *OrderData) GetTif() string {
	if o == nil || IsNil(o.Tif) {
		var ret string
		return ret
	}
	return *o.Tif
}

// GetTifOk returns a tuple with the Tif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetTifOk() (*string, bool) {
	if o == nil || IsNil(o.Tif) {
		return nil, false
	}
	return o.Tif, true
}

// HasTif returns a boolean if a field has been set.
func (o *OrderData) HasTif() bool {
	if o != nil && !IsNil(o.Tif) {
		return true
	}

	return false
}

// SetTif gets a reference to the given string and assigns it to the Tif field.
func (o *OrderData) SetTif(v string) {
	o.Tif = &v
}

// GetConid returns the Conid field value if set, zero value otherwise.
func (o *OrderData) GetConid() string {
	if o == nil || IsNil(o.Conid) {
		var ret string
		return ret
	}
	return *o.Conid
}

// GetConidOk returns a tuple with the Conid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetConidOk() (*string, bool) {
	if o == nil || IsNil(o.Conid) {
		return nil, false
	}
	return o.Conid, true
}

// HasConid returns a boolean if a field has been set.
func (o *OrderData) HasConid() bool {
	if o != nil && !IsNil(o.Conid) {
		return true
	}

	return false
}

// SetConid gets a reference to the given string and assigns it to the Conid field.
func (o *OrderData) SetConid(v string) {
	o.Conid = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OrderData) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OrderData) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OrderData) SetCurrency(v string) {
	o.Currency = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *OrderData) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *OrderData) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *OrderData) SetExchange(v string) {
	o.Exchange = &v
}

// GetListingExchange returns the ListingExchange field value if set, zero value otherwise.
func (o *OrderData) GetListingExchange() string {
	if o == nil || IsNil(o.ListingExchange) {
		var ret string
		return ret
	}
	return *o.ListingExchange
}

// GetListingExchangeOk returns a tuple with the ListingExchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetListingExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.ListingExchange) {
		return nil, false
	}
	return o.ListingExchange, true
}

// HasListingExchange returns a boolean if a field has been set.
func (o *OrderData) HasListingExchange() bool {
	if o != nil && !IsNil(o.ListingExchange) {
		return true
	}

	return false
}

// SetListingExchange gets a reference to the given string and assigns it to the ListingExchange field.
func (o *OrderData) SetListingExchange(v string) {
	o.ListingExchange = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *OrderData) GetText() float32 {
	if o == nil || IsNil(o.Text) {
		var ret float32
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetTextOk() (*float32, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *OrderData) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given float32 and assigns it to the Text field.
func (o *OrderData) SetText(v float32) {
	o.Text = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *OrderData) GetWarnings() OrderDataWarnings {
	if o == nil || IsNil(o.Warnings) {
		var ret OrderDataWarnings
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetWarningsOk() (*OrderDataWarnings, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *OrderData) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given OrderDataWarnings and assigns it to the Warnings field.
func (o *OrderData) SetWarnings(v OrderDataWarnings) {
	o.Warnings = &v
}

// GetCommCurr returns the CommCurr field value if set, zero value otherwise.
func (o *OrderData) GetCommCurr() string {
	if o == nil || IsNil(o.CommCurr) {
		var ret string
		return ret
	}
	return *o.CommCurr
}

// GetCommCurrOk returns a tuple with the CommCurr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetCommCurrOk() (*string, bool) {
	if o == nil || IsNil(o.CommCurr) {
		return nil, false
	}
	return o.CommCurr, true
}

// HasCommCurr returns a boolean if a field has been set.
func (o *OrderData) HasCommCurr() bool {
	if o != nil && !IsNil(o.CommCurr) {
		return true
	}

	return false
}

// SetCommCurr gets a reference to the given string and assigns it to the CommCurr field.
func (o *OrderData) SetCommCurr(v string) {
	o.CommCurr = &v
}

// GetComms returns the Comms field value if set, zero value otherwise.
func (o *OrderData) GetComms() string {
	if o == nil || IsNil(o.Comms) {
		var ret string
		return ret
	}
	return *o.Comms
}

// GetCommsOk returns a tuple with the Comms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetCommsOk() (*string, bool) {
	if o == nil || IsNil(o.Comms) {
		return nil, false
	}
	return o.Comms, true
}

// HasComms returns a boolean if a field has been set.
func (o *OrderData) HasComms() bool {
	if o != nil && !IsNil(o.Comms) {
		return true
	}

	return false
}

// SetComms gets a reference to the given string and assigns it to the Comms field.
func (o *OrderData) SetComms(v string) {
	o.Comms = &v
}

// GetRealizedPnl returns the RealizedPnl field value if set, zero value otherwise.
func (o *OrderData) GetRealizedPnl() string {
	if o == nil || IsNil(o.RealizedPnl) {
		var ret string
		return ret
	}
	return *o.RealizedPnl
}

// GetRealizedPnlOk returns a tuple with the RealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderData) GetRealizedPnlOk() (*string, bool) {
	if o == nil || IsNil(o.RealizedPnl) {
		return nil, false
	}
	return o.RealizedPnl, true
}

// HasRealizedPnl returns a boolean if a field has been set.
func (o *OrderData) HasRealizedPnl() bool {
	if o != nil && !IsNil(o.RealizedPnl) {
		return true
	}

	return false
}

// SetRealizedPnl gets a reference to the given string and assigns it to the RealizedPnl field.
func (o *OrderData) SetRealizedPnl(v string) {
	o.RealizedPnl = &v
}

func (o OrderData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientOrderId) {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	if !IsNil(o.ExecId) {
		toSerialize["execId"] = o.ExecId
	}
	if !IsNil(o.ExecType) {
		toSerialize["execType"] = o.ExecType
	}
	if !IsNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.OrderQty) {
		toSerialize["orderQty"] = o.OrderQty
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.LastShares) {
		toSerialize["lastShares"] = o.LastShares
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.CumQty) {
		toSerialize["cumQty"] = o.CumQty
	}
	if !IsNil(o.LeavesQty) {
		toSerialize["leavesQty"] = o.LeavesQty
	}
	if !IsNil(o.AvgPrice) {
		toSerialize["avgPrice"] = o.AvgPrice
	}
	if !IsNil(o.Side) {
		toSerialize["side"] = o.Side
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.SecType) {
		toSerialize["secType"] = o.SecType
	}
	if !IsNil(o.TxTime) {
		toSerialize["txTime"] = o.TxTime
	}
	if !IsNil(o.RcptTime) {
		toSerialize["rcptTime"] = o.RcptTime
	}
	if !IsNil(o.Tif) {
		toSerialize["tif"] = o.Tif
	}
	if !IsNil(o.Conid) {
		toSerialize["conid"] = o.Conid
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.ListingExchange) {
		toSerialize["listingExchange"] = o.ListingExchange
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	if !IsNil(o.CommCurr) {
		toSerialize["commCurr"] = o.CommCurr
	}
	if !IsNil(o.Comms) {
		toSerialize["comms"] = o.Comms
	}
	if !IsNil(o.RealizedPnl) {
		toSerialize["realizedPnl"] = o.RealizedPnl
	}
	return toSerialize, nil
}

type NullableOrderData struct {
	value *OrderData
	isSet bool
}

func (v NullableOrderData) Get() *OrderData {
	return v.value
}

func (v *NullableOrderData) Set(val *OrderData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderData(val *OrderData) *NullableOrderData {
	return &NullableOrderData{value: val, isSet: true}
}

func (v NullableOrderData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
