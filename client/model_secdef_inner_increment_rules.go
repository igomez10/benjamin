/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SecdefInnerIncrementRules type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecdefInnerIncrementRules{}

// SecdefInnerIncrementRules Price increment value contract trades.
type SecdefInnerIncrementRules struct {
	// The minimum contract price on the market that supports the specified increment.
	LowerEdge *float32 `json:"lowerEdge,omitempty"`
	// The minimum increment value for contract price.
	Increment *float32 `json:"increment,omitempty"`
}

// NewSecdefInnerIncrementRules instantiates a new SecdefInnerIncrementRules object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecdefInnerIncrementRules() *SecdefInnerIncrementRules {
	this := SecdefInnerIncrementRules{}
	return &this
}

// NewSecdefInnerIncrementRulesWithDefaults instantiates a new SecdefInnerIncrementRules object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecdefInnerIncrementRulesWithDefaults() *SecdefInnerIncrementRules {
	this := SecdefInnerIncrementRules{}
	return &this
}

// GetLowerEdge returns the LowerEdge field value if set, zero value otherwise.
func (o *SecdefInnerIncrementRules) GetLowerEdge() float32 {
	if o == nil || IsNil(o.LowerEdge) {
		var ret float32
		return ret
	}
	return *o.LowerEdge
}

// GetLowerEdgeOk returns a tuple with the LowerEdge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecdefInnerIncrementRules) GetLowerEdgeOk() (*float32, bool) {
	if o == nil || IsNil(o.LowerEdge) {
		return nil, false
	}
	return o.LowerEdge, true
}

// HasLowerEdge returns a boolean if a field has been set.
func (o *SecdefInnerIncrementRules) HasLowerEdge() bool {
	if o != nil && !IsNil(o.LowerEdge) {
		return true
	}

	return false
}

// SetLowerEdge gets a reference to the given float32 and assigns it to the LowerEdge field.
func (o *SecdefInnerIncrementRules) SetLowerEdge(v float32) {
	o.LowerEdge = &v
}

// GetIncrement returns the Increment field value if set, zero value otherwise.
func (o *SecdefInnerIncrementRules) GetIncrement() float32 {
	if o == nil || IsNil(o.Increment) {
		var ret float32
		return ret
	}
	return *o.Increment
}

// GetIncrementOk returns a tuple with the Increment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecdefInnerIncrementRules) GetIncrementOk() (*float32, bool) {
	if o == nil || IsNil(o.Increment) {
		return nil, false
	}
	return o.Increment, true
}

// HasIncrement returns a boolean if a field has been set.
func (o *SecdefInnerIncrementRules) HasIncrement() bool {
	if o != nil && !IsNil(o.Increment) {
		return true
	}

	return false
}

// SetIncrement gets a reference to the given float32 and assigns it to the Increment field.
func (o *SecdefInnerIncrementRules) SetIncrement(v float32) {
	o.Increment = &v
}

func (o SecdefInnerIncrementRules) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecdefInnerIncrementRules) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LowerEdge) {
		toSerialize["lowerEdge"] = o.LowerEdge
	}
	if !IsNil(o.Increment) {
		toSerialize["increment"] = o.Increment
	}
	return toSerialize, nil
}

type NullableSecdefInnerIncrementRules struct {
	value *SecdefInnerIncrementRules
	isSet bool
}

func (v NullableSecdefInnerIncrementRules) Get() *SecdefInnerIncrementRules {
	return v.value
}

func (v *NullableSecdefInnerIncrementRules) Set(val *SecdefInnerIncrementRules) {
	v.value = val
	v.isSet = true
}

func (v NullableSecdefInnerIncrementRules) IsSet() bool {
	return v.isSet
}

func (v *NullableSecdefInnerIncrementRules) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecdefInnerIncrementRules(val *SecdefInnerIncrementRules) *NullableSecdefInnerIncrementRules {
	return &NullableSecdefInnerIncrementRules{value: val, isSet: true}
}

func (v NullableSecdefInnerIncrementRules) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecdefInnerIncrementRules) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
