/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AllocationInnerGroupLong type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocationInnerGroupLong{}

// AllocationInnerGroupLong long positions allocation
type AllocationInnerGroupLong struct {
	Computers      *float32 `json:"Computers,omitempty"`
	Semiconductors *float32 `json:"Semiconductors,omitempty"`
	Others         *float32 `json:"Others,omitempty"`
	Chemicals      *float32 `json:"Chemicals,omitempty"`
	Apparel        *float32 `json:"Apparel,omitempty"`
	Communications *float32 `json:"Communications,omitempty"`
}

// NewAllocationInnerGroupLong instantiates a new AllocationInnerGroupLong object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationInnerGroupLong() *AllocationInnerGroupLong {
	this := AllocationInnerGroupLong{}
	return &this
}

// NewAllocationInnerGroupLongWithDefaults instantiates a new AllocationInnerGroupLong object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationInnerGroupLongWithDefaults() *AllocationInnerGroupLong {
	this := AllocationInnerGroupLong{}
	return &this
}

// GetComputers returns the Computers field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetComputers() float32 {
	if o == nil || IsNil(o.Computers) {
		var ret float32
		return ret
	}
	return *o.Computers
}

// GetComputersOk returns a tuple with the Computers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetComputersOk() (*float32, bool) {
	if o == nil || IsNil(o.Computers) {
		return nil, false
	}
	return o.Computers, true
}

// HasComputers returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasComputers() bool {
	if o != nil && !IsNil(o.Computers) {
		return true
	}

	return false
}

// SetComputers gets a reference to the given float32 and assigns it to the Computers field.
func (o *AllocationInnerGroupLong) SetComputers(v float32) {
	o.Computers = &v
}

// GetSemiconductors returns the Semiconductors field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetSemiconductors() float32 {
	if o == nil || IsNil(o.Semiconductors) {
		var ret float32
		return ret
	}
	return *o.Semiconductors
}

// GetSemiconductorsOk returns a tuple with the Semiconductors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetSemiconductorsOk() (*float32, bool) {
	if o == nil || IsNil(o.Semiconductors) {
		return nil, false
	}
	return o.Semiconductors, true
}

// HasSemiconductors returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasSemiconductors() bool {
	if o != nil && !IsNil(o.Semiconductors) {
		return true
	}

	return false
}

// SetSemiconductors gets a reference to the given float32 and assigns it to the Semiconductors field.
func (o *AllocationInnerGroupLong) SetSemiconductors(v float32) {
	o.Semiconductors = &v
}

// GetOthers returns the Others field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetOthers() float32 {
	if o == nil || IsNil(o.Others) {
		var ret float32
		return ret
	}
	return *o.Others
}

// GetOthersOk returns a tuple with the Others field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetOthersOk() (*float32, bool) {
	if o == nil || IsNil(o.Others) {
		return nil, false
	}
	return o.Others, true
}

// HasOthers returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasOthers() bool {
	if o != nil && !IsNil(o.Others) {
		return true
	}

	return false
}

// SetOthers gets a reference to the given float32 and assigns it to the Others field.
func (o *AllocationInnerGroupLong) SetOthers(v float32) {
	o.Others = &v
}

// GetChemicals returns the Chemicals field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetChemicals() float32 {
	if o == nil || IsNil(o.Chemicals) {
		var ret float32
		return ret
	}
	return *o.Chemicals
}

// GetChemicalsOk returns a tuple with the Chemicals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetChemicalsOk() (*float32, bool) {
	if o == nil || IsNil(o.Chemicals) {
		return nil, false
	}
	return o.Chemicals, true
}

// HasChemicals returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasChemicals() bool {
	if o != nil && !IsNil(o.Chemicals) {
		return true
	}

	return false
}

// SetChemicals gets a reference to the given float32 and assigns it to the Chemicals field.
func (o *AllocationInnerGroupLong) SetChemicals(v float32) {
	o.Chemicals = &v
}

// GetApparel returns the Apparel field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetApparel() float32 {
	if o == nil || IsNil(o.Apparel) {
		var ret float32
		return ret
	}
	return *o.Apparel
}

// GetApparelOk returns a tuple with the Apparel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetApparelOk() (*float32, bool) {
	if o == nil || IsNil(o.Apparel) {
		return nil, false
	}
	return o.Apparel, true
}

// HasApparel returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasApparel() bool {
	if o != nil && !IsNil(o.Apparel) {
		return true
	}

	return false
}

// SetApparel gets a reference to the given float32 and assigns it to the Apparel field.
func (o *AllocationInnerGroupLong) SetApparel(v float32) {
	o.Apparel = &v
}

// GetCommunications returns the Communications field value if set, zero value otherwise.
func (o *AllocationInnerGroupLong) GetCommunications() float32 {
	if o == nil || IsNil(o.Communications) {
		var ret float32
		return ret
	}
	return *o.Communications
}

// GetCommunicationsOk returns a tuple with the Communications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerGroupLong) GetCommunicationsOk() (*float32, bool) {
	if o == nil || IsNil(o.Communications) {
		return nil, false
	}
	return o.Communications, true
}

// HasCommunications returns a boolean if a field has been set.
func (o *AllocationInnerGroupLong) HasCommunications() bool {
	if o != nil && !IsNil(o.Communications) {
		return true
	}

	return false
}

// SetCommunications gets a reference to the given float32 and assigns it to the Communications field.
func (o *AllocationInnerGroupLong) SetCommunications(v float32) {
	o.Communications = &v
}

func (o AllocationInnerGroupLong) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocationInnerGroupLong) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Computers) {
		toSerialize["Computers"] = o.Computers
	}
	if !IsNil(o.Semiconductors) {
		toSerialize["Semiconductors"] = o.Semiconductors
	}
	if !IsNil(o.Others) {
		toSerialize["Others"] = o.Others
	}
	if !IsNil(o.Chemicals) {
		toSerialize["Chemicals"] = o.Chemicals
	}
	if !IsNil(o.Apparel) {
		toSerialize["Apparel"] = o.Apparel
	}
	if !IsNil(o.Communications) {
		toSerialize["Communications"] = o.Communications
	}
	return toSerialize, nil
}

type NullableAllocationInnerGroupLong struct {
	value *AllocationInnerGroupLong
	isSet bool
}

func (v NullableAllocationInnerGroupLong) Get() *AllocationInnerGroupLong {
	return v.value
}

func (v *NullableAllocationInnerGroupLong) Set(val *AllocationInnerGroupLong) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationInnerGroupLong) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationInnerGroupLong) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationInnerGroupLong(val *AllocationInnerGroupLong) *NullableAllocationInnerGroupLong {
	return &NullableAllocationInnerGroupLong{value: val, isSet: true}
}

func (v NullableAllocationInnerGroupLong) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationInnerGroupLong) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
