/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PaTransactionsPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaTransactionsPostRequest{}

// PaTransactionsPostRequest struct for PaTransactionsPostRequest
type PaTransactionsPostRequest struct {
	AcctIds []string  `json:"acctIds,omitempty"`
	Conids  []float32 `json:"conids,omitempty"`
	// optional defaults to USD.
	Currency *string `json:"currency,omitempty"`
	// optional, default value is 90
	Days *float32 `json:"days,omitempty"`
}

// NewPaTransactionsPostRequest instantiates a new PaTransactionsPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaTransactionsPostRequest() *PaTransactionsPostRequest {
	this := PaTransactionsPostRequest{}
	return &this
}

// NewPaTransactionsPostRequestWithDefaults instantiates a new PaTransactionsPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaTransactionsPostRequestWithDefaults() *PaTransactionsPostRequest {
	this := PaTransactionsPostRequest{}
	return &this
}

// GetAcctIds returns the AcctIds field value if set, zero value otherwise.
func (o *PaTransactionsPostRequest) GetAcctIds() []string {
	if o == nil || IsNil(o.AcctIds) {
		var ret []string
		return ret
	}
	return o.AcctIds
}

// GetAcctIdsOk returns a tuple with the AcctIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaTransactionsPostRequest) GetAcctIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AcctIds) {
		return nil, false
	}
	return o.AcctIds, true
}

// HasAcctIds returns a boolean if a field has been set.
func (o *PaTransactionsPostRequest) HasAcctIds() bool {
	if o != nil && !IsNil(o.AcctIds) {
		return true
	}

	return false
}

// SetAcctIds gets a reference to the given []string and assigns it to the AcctIds field.
func (o *PaTransactionsPostRequest) SetAcctIds(v []string) {
	o.AcctIds = v
}

// GetConids returns the Conids field value if set, zero value otherwise.
func (o *PaTransactionsPostRequest) GetConids() []float32 {
	if o == nil || IsNil(o.Conids) {
		var ret []float32
		return ret
	}
	return o.Conids
}

// GetConidsOk returns a tuple with the Conids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaTransactionsPostRequest) GetConidsOk() ([]float32, bool) {
	if o == nil || IsNil(o.Conids) {
		return nil, false
	}
	return o.Conids, true
}

// HasConids returns a boolean if a field has been set.
func (o *PaTransactionsPostRequest) HasConids() bool {
	if o != nil && !IsNil(o.Conids) {
		return true
	}

	return false
}

// SetConids gets a reference to the given []float32 and assigns it to the Conids field.
func (o *PaTransactionsPostRequest) SetConids(v []float32) {
	o.Conids = v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PaTransactionsPostRequest) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaTransactionsPostRequest) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PaTransactionsPostRequest) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PaTransactionsPostRequest) SetCurrency(v string) {
	o.Currency = &v
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *PaTransactionsPostRequest) GetDays() float32 {
	if o == nil || IsNil(o.Days) {
		var ret float32
		return ret
	}
	return *o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaTransactionsPostRequest) GetDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *PaTransactionsPostRequest) HasDays() bool {
	if o != nil && !IsNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given float32 and assigns it to the Days field.
func (o *PaTransactionsPostRequest) SetDays(v float32) {
	o.Days = &v
}

func (o PaTransactionsPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaTransactionsPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcctIds) {
		toSerialize["acctIds"] = o.AcctIds
	}
	if !IsNil(o.Conids) {
		toSerialize["conids"] = o.Conids
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Days) {
		toSerialize["days"] = o.Days
	}
	return toSerialize, nil
}

type NullablePaTransactionsPostRequest struct {
	value *PaTransactionsPostRequest
	isSet bool
}

func (v NullablePaTransactionsPostRequest) Get() *PaTransactionsPostRequest {
	return v.value
}

func (v *NullablePaTransactionsPostRequest) Set(val *PaTransactionsPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePaTransactionsPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePaTransactionsPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaTransactionsPostRequest(val *PaTransactionsPostRequest) *NullablePaTransactionsPostRequest {
	return &NullablePaTransactionsPostRequest{value: val, isSet: true}
}

func (v NullablePaTransactionsPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaTransactionsPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
