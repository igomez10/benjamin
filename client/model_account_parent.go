/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AccountParent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccountParent{}

// AccountParent struct for AccountParent
type AccountParent struct {
	Mmc []string `json:"mmc,omitempty"`
	// Account Number for Money Manager Client
	AccountId *string `json:"accountId,omitempty"`
	// Is MM a Parent Account
	IsMParent *bool `json:"isMParent,omitempty"`
	// Is MM a Child Account
	IsMChild *bool `json:"isMChild,omitempty"`
	// Is a Multiplex Account. These are account models with individual account being parent and managed account being child.
	IsMultiplex *bool `json:"isMultiplex,omitempty"`
}

// NewAccountParent instantiates a new AccountParent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountParent() *AccountParent {
	this := AccountParent{}
	return &this
}

// NewAccountParentWithDefaults instantiates a new AccountParent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountParentWithDefaults() *AccountParent {
	this := AccountParent{}
	return &this
}

// GetMmc returns the Mmc field value if set, zero value otherwise.
func (o *AccountParent) GetMmc() []string {
	if o == nil || IsNil(o.Mmc) {
		var ret []string
		return ret
	}
	return o.Mmc
}

// GetMmcOk returns a tuple with the Mmc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountParent) GetMmcOk() ([]string, bool) {
	if o == nil || IsNil(o.Mmc) {
		return nil, false
	}
	return o.Mmc, true
}

// HasMmc returns a boolean if a field has been set.
func (o *AccountParent) HasMmc() bool {
	if o != nil && !IsNil(o.Mmc) {
		return true
	}

	return false
}

// SetMmc gets a reference to the given []string and assigns it to the Mmc field.
func (o *AccountParent) SetMmc(v []string) {
	o.Mmc = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *AccountParent) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountParent) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *AccountParent) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *AccountParent) SetAccountId(v string) {
	o.AccountId = &v
}

// GetIsMParent returns the IsMParent field value if set, zero value otherwise.
func (o *AccountParent) GetIsMParent() bool {
	if o == nil || IsNil(o.IsMParent) {
		var ret bool
		return ret
	}
	return *o.IsMParent
}

// GetIsMParentOk returns a tuple with the IsMParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountParent) GetIsMParentOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMParent) {
		return nil, false
	}
	return o.IsMParent, true
}

// HasIsMParent returns a boolean if a field has been set.
func (o *AccountParent) HasIsMParent() bool {
	if o != nil && !IsNil(o.IsMParent) {
		return true
	}

	return false
}

// SetIsMParent gets a reference to the given bool and assigns it to the IsMParent field.
func (o *AccountParent) SetIsMParent(v bool) {
	o.IsMParent = &v
}

// GetIsMChild returns the IsMChild field value if set, zero value otherwise.
func (o *AccountParent) GetIsMChild() bool {
	if o == nil || IsNil(o.IsMChild) {
		var ret bool
		return ret
	}
	return *o.IsMChild
}

// GetIsMChildOk returns a tuple with the IsMChild field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountParent) GetIsMChildOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMChild) {
		return nil, false
	}
	return o.IsMChild, true
}

// HasIsMChild returns a boolean if a field has been set.
func (o *AccountParent) HasIsMChild() bool {
	if o != nil && !IsNil(o.IsMChild) {
		return true
	}

	return false
}

// SetIsMChild gets a reference to the given bool and assigns it to the IsMChild field.
func (o *AccountParent) SetIsMChild(v bool) {
	o.IsMChild = &v
}

// GetIsMultiplex returns the IsMultiplex field value if set, zero value otherwise.
func (o *AccountParent) GetIsMultiplex() bool {
	if o == nil || IsNil(o.IsMultiplex) {
		var ret bool
		return ret
	}
	return *o.IsMultiplex
}

// GetIsMultiplexOk returns a tuple with the IsMultiplex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountParent) GetIsMultiplexOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMultiplex) {
		return nil, false
	}
	return o.IsMultiplex, true
}

// HasIsMultiplex returns a boolean if a field has been set.
func (o *AccountParent) HasIsMultiplex() bool {
	if o != nil && !IsNil(o.IsMultiplex) {
		return true
	}

	return false
}

// SetIsMultiplex gets a reference to the given bool and assigns it to the IsMultiplex field.
func (o *AccountParent) SetIsMultiplex(v bool) {
	o.IsMultiplex = &v
}

func (o AccountParent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccountParent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mmc) {
		toSerialize["mmc"] = o.Mmc
	}
	if !IsNil(o.AccountId) {
		toSerialize["accountId"] = o.AccountId
	}
	if !IsNil(o.IsMParent) {
		toSerialize["isMParent"] = o.IsMParent
	}
	if !IsNil(o.IsMChild) {
		toSerialize["isMChild"] = o.IsMChild
	}
	if !IsNil(o.IsMultiplex) {
		toSerialize["isMultiplex"] = o.IsMultiplex
	}
	return toSerialize, nil
}

type NullableAccountParent struct {
	value *AccountParent
	isSet bool
}

func (v NullableAccountParent) Get() *AccountParent {
	return v.value
}

func (v *NullableAccountParent) Set(val *AccountParent) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountParent) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountParent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountParent(val *AccountParent) *NullableAccountParent {
	return &NullableAccountParent{value: val, isSet: true}
}

func (v NullableAccountParent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountParent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
