/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AlertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlertResponse{}

// AlertResponse struct for AlertResponse
type AlertResponse struct {
	// account id
	Account *string `json:"account,omitempty"`
	OrderId *int32  `json:"order_id,omitempty"`
	// name of alert
	AlertName *string `json:"alert_name,omitempty"`
	// The message you want to receive via email or text message
	AlertMessage *string `json:"alert_message,omitempty"`
	// whether alert is active or not, so value can only be 0 or 1
	AlertActive *int32 `json:"alert_active,omitempty"`
	// whether alert is repeatable or not, so value can only be 0 or 1
	AlertRepeatable *int32 `json:"alert_repeatable,omitempty"`
	// email address to receive alert
	AlertEmail *string `json:"alert_email,omitempty"`
	// whether allowing to send email or not, so value can only be 0 or 1,
	AlertSendMessage *int32 `json:"alert_send_message,omitempty"`
	// time in force, can only be GTC or GTD
	Tif *string `json:"tif,omitempty"`
	// format, YYYYMMDD-HH:mm:ss
	ExpireTime *string `json:"expire_time,omitempty"`
	// status of alert
	OrderStatus *string `json:"order_status,omitempty"`
	// value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading hours.
	OutsideRth *int32 `json:"outsideRth,omitempty"`
	// value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile
	ItwsOrdersOnly *int32 `json:"itws_orders_only,omitempty"`
	// value can only be 0 or 1, set to 1 to allow to show alert in pop-ups
	AlertShowPopup *int32 `json:"alert_show_popup,omitempty"`
	// whether the alert has been triggered
	AlertTriggered *bool `json:"alert_triggered,omitempty"`
	// whether the alert can be edited
	OrderNotEditable *bool `json:"order_not_editable,omitempty"`
	// for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert
	ToolId *int32 `json:"tool_id,omitempty"`
	// audio message to play when alert is triggered
	AlertPlayAudio *string `json:"alert_play_audio,omitempty"`
	// MTA alert only
	AlertMtaCurrency *string `json:"alert_mta_currency,omitempty"`
	// MTA alert only
	AlertMtaDefaults *string `json:"alert_mta_defaults,omitempty"`
	// MTA alert only
	TimeZone *string `json:"time_zone,omitempty"`
	// MTA alert only
	AlertDefaultType *string `json:"alert_default_type,omitempty"`
	// size of conditions array
	ConditionSize *int32 `json:"condition_size,omitempty"`
	// whether allowing the condition can be triggered outside of regular trading hours, 1 means allow
	ConditionOutsideRth *int32                         `json:"condition_outside_rth,omitempty"`
	Conditions          []AlertResponseConditionsInner `json:"conditions,omitempty"`
}

// NewAlertResponse instantiates a new AlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlertResponse() *AlertResponse {
	this := AlertResponse{}
	return &this
}

// NewAlertResponseWithDefaults instantiates a new AlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlertResponseWithDefaults() *AlertResponse {
	this := AlertResponse{}
	return &this
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *AlertResponse) GetAccount() string {
	if o == nil || IsNil(o.Account) {
		var ret string
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAccountOk() (*string, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *AlertResponse) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given string and assigns it to the Account field.
func (o *AlertResponse) SetAccount(v string) {
	o.Account = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *AlertResponse) GetOrderId() int32 {
	if o == nil || IsNil(o.OrderId) {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetOrderIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *AlertResponse) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *AlertResponse) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetAlertName returns the AlertName field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertName() string {
	if o == nil || IsNil(o.AlertName) {
		var ret string
		return ret
	}
	return *o.AlertName
}

// GetAlertNameOk returns a tuple with the AlertName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlertName) {
		return nil, false
	}
	return o.AlertName, true
}

// HasAlertName returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertName() bool {
	if o != nil && !IsNil(o.AlertName) {
		return true
	}

	return false
}

// SetAlertName gets a reference to the given string and assigns it to the AlertName field.
func (o *AlertResponse) SetAlertName(v string) {
	o.AlertName = &v
}

// GetAlertMessage returns the AlertMessage field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertMessage() string {
	if o == nil || IsNil(o.AlertMessage) {
		var ret string
		return ret
	}
	return *o.AlertMessage
}

// GetAlertMessageOk returns a tuple with the AlertMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertMessageOk() (*string, bool) {
	if o == nil || IsNil(o.AlertMessage) {
		return nil, false
	}
	return o.AlertMessage, true
}

// HasAlertMessage returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertMessage() bool {
	if o != nil && !IsNil(o.AlertMessage) {
		return true
	}

	return false
}

// SetAlertMessage gets a reference to the given string and assigns it to the AlertMessage field.
func (o *AlertResponse) SetAlertMessage(v string) {
	o.AlertMessage = &v
}

// GetAlertActive returns the AlertActive field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertActive() int32 {
	if o == nil || IsNil(o.AlertActive) {
		var ret int32
		return ret
	}
	return *o.AlertActive
}

// GetAlertActiveOk returns a tuple with the AlertActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertActiveOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertActive) {
		return nil, false
	}
	return o.AlertActive, true
}

// HasAlertActive returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertActive() bool {
	if o != nil && !IsNil(o.AlertActive) {
		return true
	}

	return false
}

// SetAlertActive gets a reference to the given int32 and assigns it to the AlertActive field.
func (o *AlertResponse) SetAlertActive(v int32) {
	o.AlertActive = &v
}

// GetAlertRepeatable returns the AlertRepeatable field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertRepeatable() int32 {
	if o == nil || IsNil(o.AlertRepeatable) {
		var ret int32
		return ret
	}
	return *o.AlertRepeatable
}

// GetAlertRepeatableOk returns a tuple with the AlertRepeatable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertRepeatableOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertRepeatable) {
		return nil, false
	}
	return o.AlertRepeatable, true
}

// HasAlertRepeatable returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertRepeatable() bool {
	if o != nil && !IsNil(o.AlertRepeatable) {
		return true
	}

	return false
}

// SetAlertRepeatable gets a reference to the given int32 and assigns it to the AlertRepeatable field.
func (o *AlertResponse) SetAlertRepeatable(v int32) {
	o.AlertRepeatable = &v
}

// GetAlertEmail returns the AlertEmail field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertEmail() string {
	if o == nil || IsNil(o.AlertEmail) {
		var ret string
		return ret
	}
	return *o.AlertEmail
}

// GetAlertEmailOk returns a tuple with the AlertEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertEmailOk() (*string, bool) {
	if o == nil || IsNil(o.AlertEmail) {
		return nil, false
	}
	return o.AlertEmail, true
}

// HasAlertEmail returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertEmail() bool {
	if o != nil && !IsNil(o.AlertEmail) {
		return true
	}

	return false
}

// SetAlertEmail gets a reference to the given string and assigns it to the AlertEmail field.
func (o *AlertResponse) SetAlertEmail(v string) {
	o.AlertEmail = &v
}

// GetAlertSendMessage returns the AlertSendMessage field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertSendMessage() int32 {
	if o == nil || IsNil(o.AlertSendMessage) {
		var ret int32
		return ret
	}
	return *o.AlertSendMessage
}

// GetAlertSendMessageOk returns a tuple with the AlertSendMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertSendMessageOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertSendMessage) {
		return nil, false
	}
	return o.AlertSendMessage, true
}

// HasAlertSendMessage returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertSendMessage() bool {
	if o != nil && !IsNil(o.AlertSendMessage) {
		return true
	}

	return false
}

// SetAlertSendMessage gets a reference to the given int32 and assigns it to the AlertSendMessage field.
func (o *AlertResponse) SetAlertSendMessage(v int32) {
	o.AlertSendMessage = &v
}

// GetTif returns the Tif field value if set, zero value otherwise.
func (o *AlertResponse) GetTif() string {
	if o == nil || IsNil(o.Tif) {
		var ret string
		return ret
	}
	return *o.Tif
}

// GetTifOk returns a tuple with the Tif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetTifOk() (*string, bool) {
	if o == nil || IsNil(o.Tif) {
		return nil, false
	}
	return o.Tif, true
}

// HasTif returns a boolean if a field has been set.
func (o *AlertResponse) HasTif() bool {
	if o != nil && !IsNil(o.Tif) {
		return true
	}

	return false
}

// SetTif gets a reference to the given string and assigns it to the Tif field.
func (o *AlertResponse) SetTif(v string) {
	o.Tif = &v
}

// GetExpireTime returns the ExpireTime field value if set, zero value otherwise.
func (o *AlertResponse) GetExpireTime() string {
	if o == nil || IsNil(o.ExpireTime) {
		var ret string
		return ret
	}
	return *o.ExpireTime
}

// GetExpireTimeOk returns a tuple with the ExpireTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetExpireTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ExpireTime) {
		return nil, false
	}
	return o.ExpireTime, true
}

// HasExpireTime returns a boolean if a field has been set.
func (o *AlertResponse) HasExpireTime() bool {
	if o != nil && !IsNil(o.ExpireTime) {
		return true
	}

	return false
}

// SetExpireTime gets a reference to the given string and assigns it to the ExpireTime field.
func (o *AlertResponse) SetExpireTime(v string) {
	o.ExpireTime = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *AlertResponse) GetOrderStatus() string {
	if o == nil || IsNil(o.OrderStatus) {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *AlertResponse) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *AlertResponse) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetOutsideRth returns the OutsideRth field value if set, zero value otherwise.
func (o *AlertResponse) GetOutsideRth() int32 {
	if o == nil || IsNil(o.OutsideRth) {
		var ret int32
		return ret
	}
	return *o.OutsideRth
}

// GetOutsideRthOk returns a tuple with the OutsideRth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetOutsideRthOk() (*int32, bool) {
	if o == nil || IsNil(o.OutsideRth) {
		return nil, false
	}
	return o.OutsideRth, true
}

// HasOutsideRth returns a boolean if a field has been set.
func (o *AlertResponse) HasOutsideRth() bool {
	if o != nil && !IsNil(o.OutsideRth) {
		return true
	}

	return false
}

// SetOutsideRth gets a reference to the given int32 and assigns it to the OutsideRth field.
func (o *AlertResponse) SetOutsideRth(v int32) {
	o.OutsideRth = &v
}

// GetItwsOrdersOnly returns the ItwsOrdersOnly field value if set, zero value otherwise.
func (o *AlertResponse) GetItwsOrdersOnly() int32 {
	if o == nil || IsNil(o.ItwsOrdersOnly) {
		var ret int32
		return ret
	}
	return *o.ItwsOrdersOnly
}

// GetItwsOrdersOnlyOk returns a tuple with the ItwsOrdersOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetItwsOrdersOnlyOk() (*int32, bool) {
	if o == nil || IsNil(o.ItwsOrdersOnly) {
		return nil, false
	}
	return o.ItwsOrdersOnly, true
}

// HasItwsOrdersOnly returns a boolean if a field has been set.
func (o *AlertResponse) HasItwsOrdersOnly() bool {
	if o != nil && !IsNil(o.ItwsOrdersOnly) {
		return true
	}

	return false
}

// SetItwsOrdersOnly gets a reference to the given int32 and assigns it to the ItwsOrdersOnly field.
func (o *AlertResponse) SetItwsOrdersOnly(v int32) {
	o.ItwsOrdersOnly = &v
}

// GetAlertShowPopup returns the AlertShowPopup field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertShowPopup() int32 {
	if o == nil || IsNil(o.AlertShowPopup) {
		var ret int32
		return ret
	}
	return *o.AlertShowPopup
}

// GetAlertShowPopupOk returns a tuple with the AlertShowPopup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertShowPopupOk() (*int32, bool) {
	if o == nil || IsNil(o.AlertShowPopup) {
		return nil, false
	}
	return o.AlertShowPopup, true
}

// HasAlertShowPopup returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertShowPopup() bool {
	if o != nil && !IsNil(o.AlertShowPopup) {
		return true
	}

	return false
}

// SetAlertShowPopup gets a reference to the given int32 and assigns it to the AlertShowPopup field.
func (o *AlertResponse) SetAlertShowPopup(v int32) {
	o.AlertShowPopup = &v
}

// GetAlertTriggered returns the AlertTriggered field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertTriggered() bool {
	if o == nil || IsNil(o.AlertTriggered) {
		var ret bool
		return ret
	}
	return *o.AlertTriggered
}

// GetAlertTriggeredOk returns a tuple with the AlertTriggered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertTriggeredOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertTriggered) {
		return nil, false
	}
	return o.AlertTriggered, true
}

// HasAlertTriggered returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertTriggered() bool {
	if o != nil && !IsNil(o.AlertTriggered) {
		return true
	}

	return false
}

// SetAlertTriggered gets a reference to the given bool and assigns it to the AlertTriggered field.
func (o *AlertResponse) SetAlertTriggered(v bool) {
	o.AlertTriggered = &v
}

// GetOrderNotEditable returns the OrderNotEditable field value if set, zero value otherwise.
func (o *AlertResponse) GetOrderNotEditable() bool {
	if o == nil || IsNil(o.OrderNotEditable) {
		var ret bool
		return ret
	}
	return *o.OrderNotEditable
}

// GetOrderNotEditableOk returns a tuple with the OrderNotEditable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetOrderNotEditableOk() (*bool, bool) {
	if o == nil || IsNil(o.OrderNotEditable) {
		return nil, false
	}
	return o.OrderNotEditable, true
}

// HasOrderNotEditable returns a boolean if a field has been set.
func (o *AlertResponse) HasOrderNotEditable() bool {
	if o != nil && !IsNil(o.OrderNotEditable) {
		return true
	}

	return false
}

// SetOrderNotEditable gets a reference to the given bool and assigns it to the OrderNotEditable field.
func (o *AlertResponse) SetOrderNotEditable(v bool) {
	o.OrderNotEditable = &v
}

// GetToolId returns the ToolId field value if set, zero value otherwise.
func (o *AlertResponse) GetToolId() int32 {
	if o == nil || IsNil(o.ToolId) {
		var ret int32
		return ret
	}
	return *o.ToolId
}

// GetToolIdOk returns a tuple with the ToolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetToolIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ToolId) {
		return nil, false
	}
	return o.ToolId, true
}

// HasToolId returns a boolean if a field has been set.
func (o *AlertResponse) HasToolId() bool {
	if o != nil && !IsNil(o.ToolId) {
		return true
	}

	return false
}

// SetToolId gets a reference to the given int32 and assigns it to the ToolId field.
func (o *AlertResponse) SetToolId(v int32) {
	o.ToolId = &v
}

// GetAlertPlayAudio returns the AlertPlayAudio field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertPlayAudio() string {
	if o == nil || IsNil(o.AlertPlayAudio) {
		var ret string
		return ret
	}
	return *o.AlertPlayAudio
}

// GetAlertPlayAudioOk returns a tuple with the AlertPlayAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertPlayAudioOk() (*string, bool) {
	if o == nil || IsNil(o.AlertPlayAudio) {
		return nil, false
	}
	return o.AlertPlayAudio, true
}

// HasAlertPlayAudio returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertPlayAudio() bool {
	if o != nil && !IsNil(o.AlertPlayAudio) {
		return true
	}

	return false
}

// SetAlertPlayAudio gets a reference to the given string and assigns it to the AlertPlayAudio field.
func (o *AlertResponse) SetAlertPlayAudio(v string) {
	o.AlertPlayAudio = &v
}

// GetAlertMtaCurrency returns the AlertMtaCurrency field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertMtaCurrency() string {
	if o == nil || IsNil(o.AlertMtaCurrency) {
		var ret string
		return ret
	}
	return *o.AlertMtaCurrency
}

// GetAlertMtaCurrencyOk returns a tuple with the AlertMtaCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertMtaCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.AlertMtaCurrency) {
		return nil, false
	}
	return o.AlertMtaCurrency, true
}

// HasAlertMtaCurrency returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertMtaCurrency() bool {
	if o != nil && !IsNil(o.AlertMtaCurrency) {
		return true
	}

	return false
}

// SetAlertMtaCurrency gets a reference to the given string and assigns it to the AlertMtaCurrency field.
func (o *AlertResponse) SetAlertMtaCurrency(v string) {
	o.AlertMtaCurrency = &v
}

// GetAlertMtaDefaults returns the AlertMtaDefaults field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertMtaDefaults() string {
	if o == nil || IsNil(o.AlertMtaDefaults) {
		var ret string
		return ret
	}
	return *o.AlertMtaDefaults
}

// GetAlertMtaDefaultsOk returns a tuple with the AlertMtaDefaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertMtaDefaultsOk() (*string, bool) {
	if o == nil || IsNil(o.AlertMtaDefaults) {
		return nil, false
	}
	return o.AlertMtaDefaults, true
}

// HasAlertMtaDefaults returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertMtaDefaults() bool {
	if o != nil && !IsNil(o.AlertMtaDefaults) {
		return true
	}

	return false
}

// SetAlertMtaDefaults gets a reference to the given string and assigns it to the AlertMtaDefaults field.
func (o *AlertResponse) SetAlertMtaDefaults(v string) {
	o.AlertMtaDefaults = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *AlertResponse) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *AlertResponse) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *AlertResponse) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetAlertDefaultType returns the AlertDefaultType field value if set, zero value otherwise.
func (o *AlertResponse) GetAlertDefaultType() string {
	if o == nil || IsNil(o.AlertDefaultType) {
		var ret string
		return ret
	}
	return *o.AlertDefaultType
}

// GetAlertDefaultTypeOk returns a tuple with the AlertDefaultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetAlertDefaultTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AlertDefaultType) {
		return nil, false
	}
	return o.AlertDefaultType, true
}

// HasAlertDefaultType returns a boolean if a field has been set.
func (o *AlertResponse) HasAlertDefaultType() bool {
	if o != nil && !IsNil(o.AlertDefaultType) {
		return true
	}

	return false
}

// SetAlertDefaultType gets a reference to the given string and assigns it to the AlertDefaultType field.
func (o *AlertResponse) SetAlertDefaultType(v string) {
	o.AlertDefaultType = &v
}

// GetConditionSize returns the ConditionSize field value if set, zero value otherwise.
func (o *AlertResponse) GetConditionSize() int32 {
	if o == nil || IsNil(o.ConditionSize) {
		var ret int32
		return ret
	}
	return *o.ConditionSize
}

// GetConditionSizeOk returns a tuple with the ConditionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetConditionSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ConditionSize) {
		return nil, false
	}
	return o.ConditionSize, true
}

// HasConditionSize returns a boolean if a field has been set.
func (o *AlertResponse) HasConditionSize() bool {
	if o != nil && !IsNil(o.ConditionSize) {
		return true
	}

	return false
}

// SetConditionSize gets a reference to the given int32 and assigns it to the ConditionSize field.
func (o *AlertResponse) SetConditionSize(v int32) {
	o.ConditionSize = &v
}

// GetConditionOutsideRth returns the ConditionOutsideRth field value if set, zero value otherwise.
func (o *AlertResponse) GetConditionOutsideRth() int32 {
	if o == nil || IsNil(o.ConditionOutsideRth) {
		var ret int32
		return ret
	}
	return *o.ConditionOutsideRth
}

// GetConditionOutsideRthOk returns a tuple with the ConditionOutsideRth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetConditionOutsideRthOk() (*int32, bool) {
	if o == nil || IsNil(o.ConditionOutsideRth) {
		return nil, false
	}
	return o.ConditionOutsideRth, true
}

// HasConditionOutsideRth returns a boolean if a field has been set.
func (o *AlertResponse) HasConditionOutsideRth() bool {
	if o != nil && !IsNil(o.ConditionOutsideRth) {
		return true
	}

	return false
}

// SetConditionOutsideRth gets a reference to the given int32 and assigns it to the ConditionOutsideRth field.
func (o *AlertResponse) SetConditionOutsideRth(v int32) {
	o.ConditionOutsideRth = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *AlertResponse) GetConditions() []AlertResponseConditionsInner {
	if o == nil || IsNil(o.Conditions) {
		var ret []AlertResponseConditionsInner
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlertResponse) GetConditionsOk() ([]AlertResponseConditionsInner, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *AlertResponse) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []AlertResponseConditionsInner and assigns it to the Conditions field.
func (o *AlertResponse) SetConditions(v []AlertResponseConditionsInner) {
	o.Conditions = v
}

func (o AlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	if !IsNil(o.OrderId) {
		toSerialize["order_id"] = o.OrderId
	}
	if !IsNil(o.AlertName) {
		toSerialize["alert_name"] = o.AlertName
	}
	if !IsNil(o.AlertMessage) {
		toSerialize["alert_message"] = o.AlertMessage
	}
	if !IsNil(o.AlertActive) {
		toSerialize["alert_active"] = o.AlertActive
	}
	if !IsNil(o.AlertRepeatable) {
		toSerialize["alert_repeatable"] = o.AlertRepeatable
	}
	if !IsNil(o.AlertEmail) {
		toSerialize["alert_email"] = o.AlertEmail
	}
	if !IsNil(o.AlertSendMessage) {
		toSerialize["alert_send_message"] = o.AlertSendMessage
	}
	if !IsNil(o.Tif) {
		toSerialize["tif"] = o.Tif
	}
	if !IsNil(o.ExpireTime) {
		toSerialize["expire_time"] = o.ExpireTime
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["order_status"] = o.OrderStatus
	}
	if !IsNil(o.OutsideRth) {
		toSerialize["outsideRth"] = o.OutsideRth
	}
	if !IsNil(o.ItwsOrdersOnly) {
		toSerialize["itws_orders_only"] = o.ItwsOrdersOnly
	}
	if !IsNil(o.AlertShowPopup) {
		toSerialize["alert_show_popup"] = o.AlertShowPopup
	}
	if !IsNil(o.AlertTriggered) {
		toSerialize["alert_triggered"] = o.AlertTriggered
	}
	if !IsNil(o.OrderNotEditable) {
		toSerialize["order_not_editable"] = o.OrderNotEditable
	}
	if !IsNil(o.ToolId) {
		toSerialize["tool_id"] = o.ToolId
	}
	if !IsNil(o.AlertPlayAudio) {
		toSerialize["alert_play_audio"] = o.AlertPlayAudio
	}
	if !IsNil(o.AlertMtaCurrency) {
		toSerialize["alert_mta_currency"] = o.AlertMtaCurrency
	}
	if !IsNil(o.AlertMtaDefaults) {
		toSerialize["alert_mta_defaults"] = o.AlertMtaDefaults
	}
	if !IsNil(o.TimeZone) {
		toSerialize["time_zone"] = o.TimeZone
	}
	if !IsNil(o.AlertDefaultType) {
		toSerialize["alert_default_type"] = o.AlertDefaultType
	}
	if !IsNil(o.ConditionSize) {
		toSerialize["condition_size"] = o.ConditionSize
	}
	if !IsNil(o.ConditionOutsideRth) {
		toSerialize["condition_outside_rth"] = o.ConditionOutsideRth
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	return toSerialize, nil
}

type NullableAlertResponse struct {
	value *AlertResponse
	isSet bool
}

func (v NullableAlertResponse) Get() *AlertResponse {
	return v.value
}

func (v *NullableAlertResponse) Set(val *AlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlertResponse(val *AlertResponse) *NullableAlertResponse {
	return &NullableAlertResponse{value: val, isSet: true}
}

func (v NullableAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
