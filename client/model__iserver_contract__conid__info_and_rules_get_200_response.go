/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the IserverContractConidInfoAndRulesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IserverContractConidInfoAndRulesGet200Response{}

// IserverContractConidInfoAndRulesGet200Response struct for IserverContractConidInfoAndRulesGet200Response
type IserverContractConidInfoAndRulesGet200Response struct {
	// Classification of Financial Instrument codes
	CfiCode *string `json:"cfi_code,omitempty"`
	// Underlying symbol
	Symbol *string `json:"symbol,omitempty"`
	Cusip  *string `json:"cusip,omitempty"`
	// Expiration Date in the format YYYYMMDD
	ExpiryFull *float32 `json:"expiry_full,omitempty"`
	// IBKRs contract identifier
	ConId *float32 `json:"con_id,omitempty"`
	// Date on which the underlying transaction settles if the option is exercised
	MaturityDate *float32 `json:"maturity_date,omitempty"`
	// Specific group of companies or businesses.
	Industry *string `json:"industry,omitempty"`
	// Asset Class of the contract
	InstrumentType *string `json:"instrument_type,omitempty"`
	// Designation of the contract
	TradingClass *string `json:"trading_class,omitempty"`
	// Comma separated list of exchanges or trading venues
	ValidExchanges *string `json:"valid_exchanges,omitempty"`
	// Allowed to sell shares that you own
	AllowSellLong *bool `json:"allow_sell_long,omitempty"`
	// Supports zero commission trades
	IsZeroCommissionSecurity *bool `json:"is_zero_commission_security,omitempty"`
	// Contracts symbol from primary exchange. For options it is the OCC symbol.
	LocalSymbol *string `json:"local_symbol,omitempty"`
	Classifier  *string `json:"classifier,omitempty"`
	// Currency contract trades in
	Currency *string `json:"currency,omitempty"`
	// Formatted contract parameters
	Text *string `json:"text,omitempty"`
	// IBKRs contract identifier for the underlying instrument
	UnderlyingConId *float32 `json:"underlying_con_id,omitempty"`
	// Provides trading outside of Regular Trading Hours
	RTH *bool `json:"r_t_h,omitempty"`
	// numerical value of each point of price movement
	Multiplier *string `json:"multiplier,omitempty"`
	// fixed price at which the owner of the option buys or sells the underlying
	Strike *string `json:"strike,omitempty"`
	// Put or Call of the option
	Right *string `json:"right,omitempty"`
	// Legal entity for underlying contract
	UnderlyingIssuer *string `json:"underlying_issuer,omitempty"`
	// Month the contract must be satisfied by making or accepting delivery
	ContractMonth *string `json:"contract_month,omitempty"`
	// Contracts company name
	CompanyName *string `json:"company_name,omitempty"`
	// Support IBKRs SMART routing
	SmartAvailable *bool `json:"smart_available,omitempty"`
	// Primary Exchange, Routing or Trading Venue
	Exchange *string                                                    `json:"exchange,omitempty"`
	Rules    []IserverContractConidInfoAndRulesGet200ResponseRulesInner `json:"rules,omitempty"`
}

// NewIserverContractConidInfoAndRulesGet200Response instantiates a new IserverContractConidInfoAndRulesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIserverContractConidInfoAndRulesGet200Response() *IserverContractConidInfoAndRulesGet200Response {
	this := IserverContractConidInfoAndRulesGet200Response{}
	return &this
}

// NewIserverContractConidInfoAndRulesGet200ResponseWithDefaults instantiates a new IserverContractConidInfoAndRulesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIserverContractConidInfoAndRulesGet200ResponseWithDefaults() *IserverContractConidInfoAndRulesGet200Response {
	this := IserverContractConidInfoAndRulesGet200Response{}
	return &this
}

// GetCfiCode returns the CfiCode field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCfiCode() string {
	if o == nil || IsNil(o.CfiCode) {
		var ret string
		return ret
	}
	return *o.CfiCode
}

// GetCfiCodeOk returns a tuple with the CfiCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCfiCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CfiCode) {
		return nil, false
	}
	return o.CfiCode, true
}

// HasCfiCode returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasCfiCode() bool {
	if o != nil && !IsNil(o.CfiCode) {
		return true
	}

	return false
}

// SetCfiCode gets a reference to the given string and assigns it to the CfiCode field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetCfiCode(v string) {
	o.CfiCode = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetSymbol(v string) {
	o.Symbol = &v
}

// GetCusip returns the Cusip field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCusip() string {
	if o == nil || IsNil(o.Cusip) {
		var ret string
		return ret
	}
	return *o.Cusip
}

// GetCusipOk returns a tuple with the Cusip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCusipOk() (*string, bool) {
	if o == nil || IsNil(o.Cusip) {
		return nil, false
	}
	return o.Cusip, true
}

// HasCusip returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasCusip() bool {
	if o != nil && !IsNil(o.Cusip) {
		return true
	}

	return false
}

// SetCusip gets a reference to the given string and assigns it to the Cusip field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetCusip(v string) {
	o.Cusip = &v
}

// GetExpiryFull returns the ExpiryFull field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetExpiryFull() float32 {
	if o == nil || IsNil(o.ExpiryFull) {
		var ret float32
		return ret
	}
	return *o.ExpiryFull
}

// GetExpiryFullOk returns a tuple with the ExpiryFull field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetExpiryFullOk() (*float32, bool) {
	if o == nil || IsNil(o.ExpiryFull) {
		return nil, false
	}
	return o.ExpiryFull, true
}

// HasExpiryFull returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasExpiryFull() bool {
	if o != nil && !IsNil(o.ExpiryFull) {
		return true
	}

	return false
}

// SetExpiryFull gets a reference to the given float32 and assigns it to the ExpiryFull field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetExpiryFull(v float32) {
	o.ExpiryFull = &v
}

// GetConId returns the ConId field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetConId() float32 {
	if o == nil || IsNil(o.ConId) {
		var ret float32
		return ret
	}
	return *o.ConId
}

// GetConIdOk returns a tuple with the ConId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetConIdOk() (*float32, bool) {
	if o == nil || IsNil(o.ConId) {
		return nil, false
	}
	return o.ConId, true
}

// HasConId returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasConId() bool {
	if o != nil && !IsNil(o.ConId) {
		return true
	}

	return false
}

// SetConId gets a reference to the given float32 and assigns it to the ConId field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetConId(v float32) {
	o.ConId = &v
}

// GetMaturityDate returns the MaturityDate field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetMaturityDate() float32 {
	if o == nil || IsNil(o.MaturityDate) {
		var ret float32
		return ret
	}
	return *o.MaturityDate
}

// GetMaturityDateOk returns a tuple with the MaturityDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetMaturityDateOk() (*float32, bool) {
	if o == nil || IsNil(o.MaturityDate) {
		return nil, false
	}
	return o.MaturityDate, true
}

// HasMaturityDate returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasMaturityDate() bool {
	if o != nil && !IsNil(o.MaturityDate) {
		return true
	}

	return false
}

// SetMaturityDate gets a reference to the given float32 and assigns it to the MaturityDate field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetMaturityDate(v float32) {
	o.MaturityDate = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetIndustry() string {
	if o == nil || IsNil(o.Industry) {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetIndustryOk() (*string, bool) {
	if o == nil || IsNil(o.Industry) {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasIndustry() bool {
	if o != nil && !IsNil(o.Industry) {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetIndustry(v string) {
	o.Industry = &v
}

// GetInstrumentType returns the InstrumentType field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetInstrumentType() string {
	if o == nil || IsNil(o.InstrumentType) {
		var ret string
		return ret
	}
	return *o.InstrumentType
}

// GetInstrumentTypeOk returns a tuple with the InstrumentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetInstrumentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstrumentType) {
		return nil, false
	}
	return o.InstrumentType, true
}

// HasInstrumentType returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasInstrumentType() bool {
	if o != nil && !IsNil(o.InstrumentType) {
		return true
	}

	return false
}

// SetInstrumentType gets a reference to the given string and assigns it to the InstrumentType field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetInstrumentType(v string) {
	o.InstrumentType = &v
}

// GetTradingClass returns the TradingClass field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetTradingClass() string {
	if o == nil || IsNil(o.TradingClass) {
		var ret string
		return ret
	}
	return *o.TradingClass
}

// GetTradingClassOk returns a tuple with the TradingClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetTradingClassOk() (*string, bool) {
	if o == nil || IsNil(o.TradingClass) {
		return nil, false
	}
	return o.TradingClass, true
}

// HasTradingClass returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasTradingClass() bool {
	if o != nil && !IsNil(o.TradingClass) {
		return true
	}

	return false
}

// SetTradingClass gets a reference to the given string and assigns it to the TradingClass field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetTradingClass(v string) {
	o.TradingClass = &v
}

// GetValidExchanges returns the ValidExchanges field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetValidExchanges() string {
	if o == nil || IsNil(o.ValidExchanges) {
		var ret string
		return ret
	}
	return *o.ValidExchanges
}

// GetValidExchangesOk returns a tuple with the ValidExchanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetValidExchangesOk() (*string, bool) {
	if o == nil || IsNil(o.ValidExchanges) {
		return nil, false
	}
	return o.ValidExchanges, true
}

// HasValidExchanges returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasValidExchanges() bool {
	if o != nil && !IsNil(o.ValidExchanges) {
		return true
	}

	return false
}

// SetValidExchanges gets a reference to the given string and assigns it to the ValidExchanges field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetValidExchanges(v string) {
	o.ValidExchanges = &v
}

// GetAllowSellLong returns the AllowSellLong field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetAllowSellLong() bool {
	if o == nil || IsNil(o.AllowSellLong) {
		var ret bool
		return ret
	}
	return *o.AllowSellLong
}

// GetAllowSellLongOk returns a tuple with the AllowSellLong field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetAllowSellLongOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowSellLong) {
		return nil, false
	}
	return o.AllowSellLong, true
}

// HasAllowSellLong returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasAllowSellLong() bool {
	if o != nil && !IsNil(o.AllowSellLong) {
		return true
	}

	return false
}

// SetAllowSellLong gets a reference to the given bool and assigns it to the AllowSellLong field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetAllowSellLong(v bool) {
	o.AllowSellLong = &v
}

// GetIsZeroCommissionSecurity returns the IsZeroCommissionSecurity field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetIsZeroCommissionSecurity() bool {
	if o == nil || IsNil(o.IsZeroCommissionSecurity) {
		var ret bool
		return ret
	}
	return *o.IsZeroCommissionSecurity
}

// GetIsZeroCommissionSecurityOk returns a tuple with the IsZeroCommissionSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetIsZeroCommissionSecurityOk() (*bool, bool) {
	if o == nil || IsNil(o.IsZeroCommissionSecurity) {
		return nil, false
	}
	return o.IsZeroCommissionSecurity, true
}

// HasIsZeroCommissionSecurity returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasIsZeroCommissionSecurity() bool {
	if o != nil && !IsNil(o.IsZeroCommissionSecurity) {
		return true
	}

	return false
}

// SetIsZeroCommissionSecurity gets a reference to the given bool and assigns it to the IsZeroCommissionSecurity field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetIsZeroCommissionSecurity(v bool) {
	o.IsZeroCommissionSecurity = &v
}

// GetLocalSymbol returns the LocalSymbol field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetLocalSymbol() string {
	if o == nil || IsNil(o.LocalSymbol) {
		var ret string
		return ret
	}
	return *o.LocalSymbol
}

// GetLocalSymbolOk returns a tuple with the LocalSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetLocalSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.LocalSymbol) {
		return nil, false
	}
	return o.LocalSymbol, true
}

// HasLocalSymbol returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasLocalSymbol() bool {
	if o != nil && !IsNil(o.LocalSymbol) {
		return true
	}

	return false
}

// SetLocalSymbol gets a reference to the given string and assigns it to the LocalSymbol field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetLocalSymbol(v string) {
	o.LocalSymbol = &v
}

// GetClassifier returns the Classifier field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetClassifier() string {
	if o == nil || IsNil(o.Classifier) {
		var ret string
		return ret
	}
	return *o.Classifier
}

// GetClassifierOk returns a tuple with the Classifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetClassifierOk() (*string, bool) {
	if o == nil || IsNil(o.Classifier) {
		return nil, false
	}
	return o.Classifier, true
}

// HasClassifier returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasClassifier() bool {
	if o != nil && !IsNil(o.Classifier) {
		return true
	}

	return false
}

// SetClassifier gets a reference to the given string and assigns it to the Classifier field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetClassifier(v string) {
	o.Classifier = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetCurrency(v string) {
	o.Currency = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetText(v string) {
	o.Text = &v
}

// GetUnderlyingConId returns the UnderlyingConId field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetUnderlyingConId() float32 {
	if o == nil || IsNil(o.UnderlyingConId) {
		var ret float32
		return ret
	}
	return *o.UnderlyingConId
}

// GetUnderlyingConIdOk returns a tuple with the UnderlyingConId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetUnderlyingConIdOk() (*float32, bool) {
	if o == nil || IsNil(o.UnderlyingConId) {
		return nil, false
	}
	return o.UnderlyingConId, true
}

// HasUnderlyingConId returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasUnderlyingConId() bool {
	if o != nil && !IsNil(o.UnderlyingConId) {
		return true
	}

	return false
}

// SetUnderlyingConId gets a reference to the given float32 and assigns it to the UnderlyingConId field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetUnderlyingConId(v float32) {
	o.UnderlyingConId = &v
}

// GetRTH returns the RTH field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRTH() bool {
	if o == nil || IsNil(o.RTH) {
		var ret bool
		return ret
	}
	return *o.RTH
}

// GetRTHOk returns a tuple with the RTH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRTHOk() (*bool, bool) {
	if o == nil || IsNil(o.RTH) {
		return nil, false
	}
	return o.RTH, true
}

// HasRTH returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasRTH() bool {
	if o != nil && !IsNil(o.RTH) {
		return true
	}

	return false
}

// SetRTH gets a reference to the given bool and assigns it to the RTH field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetRTH(v bool) {
	o.RTH = &v
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetMultiplier() string {
	if o == nil || IsNil(o.Multiplier) {
		var ret string
		return ret
	}
	return *o.Multiplier
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetMultiplierOk() (*string, bool) {
	if o == nil || IsNil(o.Multiplier) {
		return nil, false
	}
	return o.Multiplier, true
}

// HasMultiplier returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasMultiplier() bool {
	if o != nil && !IsNil(o.Multiplier) {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given string and assigns it to the Multiplier field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetMultiplier(v string) {
	o.Multiplier = &v
}

// GetStrike returns the Strike field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetStrike() string {
	if o == nil || IsNil(o.Strike) {
		var ret string
		return ret
	}
	return *o.Strike
}

// GetStrikeOk returns a tuple with the Strike field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetStrikeOk() (*string, bool) {
	if o == nil || IsNil(o.Strike) {
		return nil, false
	}
	return o.Strike, true
}

// HasStrike returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasStrike() bool {
	if o != nil && !IsNil(o.Strike) {
		return true
	}

	return false
}

// SetStrike gets a reference to the given string and assigns it to the Strike field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetStrike(v string) {
	o.Strike = &v
}

// GetRight returns the Right field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRight() string {
	if o == nil || IsNil(o.Right) {
		var ret string
		return ret
	}
	return *o.Right
}

// GetRightOk returns a tuple with the Right field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRightOk() (*string, bool) {
	if o == nil || IsNil(o.Right) {
		return nil, false
	}
	return o.Right, true
}

// HasRight returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasRight() bool {
	if o != nil && !IsNil(o.Right) {
		return true
	}

	return false
}

// SetRight gets a reference to the given string and assigns it to the Right field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetRight(v string) {
	o.Right = &v
}

// GetUnderlyingIssuer returns the UnderlyingIssuer field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetUnderlyingIssuer() string {
	if o == nil || IsNil(o.UnderlyingIssuer) {
		var ret string
		return ret
	}
	return *o.UnderlyingIssuer
}

// GetUnderlyingIssuerOk returns a tuple with the UnderlyingIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetUnderlyingIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.UnderlyingIssuer) {
		return nil, false
	}
	return o.UnderlyingIssuer, true
}

// HasUnderlyingIssuer returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasUnderlyingIssuer() bool {
	if o != nil && !IsNil(o.UnderlyingIssuer) {
		return true
	}

	return false
}

// SetUnderlyingIssuer gets a reference to the given string and assigns it to the UnderlyingIssuer field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetUnderlyingIssuer(v string) {
	o.UnderlyingIssuer = &v
}

// GetContractMonth returns the ContractMonth field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetContractMonth() string {
	if o == nil || IsNil(o.ContractMonth) {
		var ret string
		return ret
	}
	return *o.ContractMonth
}

// GetContractMonthOk returns a tuple with the ContractMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetContractMonthOk() (*string, bool) {
	if o == nil || IsNil(o.ContractMonth) {
		return nil, false
	}
	return o.ContractMonth, true
}

// HasContractMonth returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasContractMonth() bool {
	if o != nil && !IsNil(o.ContractMonth) {
		return true
	}

	return false
}

// SetContractMonth gets a reference to the given string and assigns it to the ContractMonth field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetContractMonth(v string) {
	o.ContractMonth = &v
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetSmartAvailable returns the SmartAvailable field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetSmartAvailable() bool {
	if o == nil || IsNil(o.SmartAvailable) {
		var ret bool
		return ret
	}
	return *o.SmartAvailable
}

// GetSmartAvailableOk returns a tuple with the SmartAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetSmartAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.SmartAvailable) {
		return nil, false
	}
	return o.SmartAvailable, true
}

// HasSmartAvailable returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasSmartAvailable() bool {
	if o != nil && !IsNil(o.SmartAvailable) {
		return true
	}

	return false
}

// SetSmartAvailable gets a reference to the given bool and assigns it to the SmartAvailable field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetSmartAvailable(v bool) {
	o.SmartAvailable = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetExchange(v string) {
	o.Exchange = &v
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRules() []IserverContractConidInfoAndRulesGet200ResponseRulesInner {
	if o == nil || IsNil(o.Rules) {
		var ret []IserverContractConidInfoAndRulesGet200ResponseRulesInner
		return ret
	}
	return o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) GetRulesOk() ([]IserverContractConidInfoAndRulesGet200ResponseRulesInner, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *IserverContractConidInfoAndRulesGet200Response) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given []IserverContractConidInfoAndRulesGet200ResponseRulesInner and assigns it to the Rules field.
func (o *IserverContractConidInfoAndRulesGet200Response) SetRules(v []IserverContractConidInfoAndRulesGet200ResponseRulesInner) {
	o.Rules = v
}

func (o IserverContractConidInfoAndRulesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IserverContractConidInfoAndRulesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CfiCode) {
		toSerialize["cfi_code"] = o.CfiCode
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Cusip) {
		toSerialize["cusip"] = o.Cusip
	}
	if !IsNil(o.ExpiryFull) {
		toSerialize["expiry_full"] = o.ExpiryFull
	}
	if !IsNil(o.ConId) {
		toSerialize["con_id"] = o.ConId
	}
	if !IsNil(o.MaturityDate) {
		toSerialize["maturity_date"] = o.MaturityDate
	}
	if !IsNil(o.Industry) {
		toSerialize["industry"] = o.Industry
	}
	if !IsNil(o.InstrumentType) {
		toSerialize["instrument_type"] = o.InstrumentType
	}
	if !IsNil(o.TradingClass) {
		toSerialize["trading_class"] = o.TradingClass
	}
	if !IsNil(o.ValidExchanges) {
		toSerialize["valid_exchanges"] = o.ValidExchanges
	}
	if !IsNil(o.AllowSellLong) {
		toSerialize["allow_sell_long"] = o.AllowSellLong
	}
	if !IsNil(o.IsZeroCommissionSecurity) {
		toSerialize["is_zero_commission_security"] = o.IsZeroCommissionSecurity
	}
	if !IsNil(o.LocalSymbol) {
		toSerialize["local_symbol"] = o.LocalSymbol
	}
	if !IsNil(o.Classifier) {
		toSerialize["classifier"] = o.Classifier
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.UnderlyingConId) {
		toSerialize["underlying_con_id"] = o.UnderlyingConId
	}
	if !IsNil(o.RTH) {
		toSerialize["r_t_h"] = o.RTH
	}
	if !IsNil(o.Multiplier) {
		toSerialize["multiplier"] = o.Multiplier
	}
	if !IsNil(o.Strike) {
		toSerialize["strike"] = o.Strike
	}
	if !IsNil(o.Right) {
		toSerialize["right"] = o.Right
	}
	if !IsNil(o.UnderlyingIssuer) {
		toSerialize["underlying_issuer"] = o.UnderlyingIssuer
	}
	if !IsNil(o.ContractMonth) {
		toSerialize["contract_month"] = o.ContractMonth
	}
	if !IsNil(o.CompanyName) {
		toSerialize["company_name"] = o.CompanyName
	}
	if !IsNil(o.SmartAvailable) {
		toSerialize["smart_available"] = o.SmartAvailable
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.Rules) {
		toSerialize["rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableIserverContractConidInfoAndRulesGet200Response struct {
	value *IserverContractConidInfoAndRulesGet200Response
	isSet bool
}

func (v NullableIserverContractConidInfoAndRulesGet200Response) Get() *IserverContractConidInfoAndRulesGet200Response {
	return v.value
}

func (v *NullableIserverContractConidInfoAndRulesGet200Response) Set(val *IserverContractConidInfoAndRulesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableIserverContractConidInfoAndRulesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableIserverContractConidInfoAndRulesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIserverContractConidInfoAndRulesGet200Response(val *IserverContractConidInfoAndRulesGet200Response) *NullableIserverContractConidInfoAndRulesGet200Response {
	return &NullableIserverContractConidInfoAndRulesGet200Response{value: val, isSet: true}
}

func (v NullableIserverContractConidInfoAndRulesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIserverContractConidInfoAndRulesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
