/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetLedger200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLedger200Response{}

// GetLedger200Response struct for GetLedger200Response
type GetLedger200Response struct {
	BASE *Ledger `json:"BASE,omitempty"`
}

// NewGetLedger200Response instantiates a new GetLedger200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLedger200Response() *GetLedger200Response {
	this := GetLedger200Response{}
	return &this
}

// NewGetLedger200ResponseWithDefaults instantiates a new GetLedger200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLedger200ResponseWithDefaults() *GetLedger200Response {
	this := GetLedger200Response{}
	return &this
}

// GetBASE returns the BASE field value if set, zero value otherwise.
func (o *GetLedger200Response) GetBASE() Ledger {
	if o == nil || IsNil(o.BASE) {
		var ret Ledger
		return ret
	}
	return *o.BASE
}

// GetBASEOk returns a tuple with the BASE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLedger200Response) GetBASEOk() (*Ledger, bool) {
	if o == nil || IsNil(o.BASE) {
		return nil, false
	}
	return o.BASE, true
}

// HasBASE returns a boolean if a field has been set.
func (o *GetLedger200Response) HasBASE() bool {
	if o != nil && !IsNil(o.BASE) {
		return true
	}

	return false
}

// SetBASE gets a reference to the given Ledger and assigns it to the BASE field.
func (o *GetLedger200Response) SetBASE(v Ledger) {
	o.BASE = &v
}

func (o GetLedger200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLedger200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BASE) {
		toSerialize["BASE"] = o.BASE
	}
	return toSerialize, nil
}

type NullableGetLedger200Response struct {
	value *GetLedger200Response
	isSet bool
}

func (v NullableGetLedger200Response) Get() *GetLedger200Response {
	return v.value
}

func (v *NullableGetLedger200Response) Set(val *GetLedger200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLedger200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLedger200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLedger200Response(val *GetLedger200Response) *NullableGetLedger200Response {
	return &NullableGetLedger200Response{value: val, isSet: true}
}

func (v NullableGetLedger200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLedger200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
