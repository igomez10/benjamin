/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PositionInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PositionInner{}

// PositionInner Account Information
type PositionInner struct {
	AcctId            *string  `json:"acctId,omitempty"`
	Conid             *int32   `json:"conid,omitempty"`
	ContractDesc      *string  `json:"contractDesc,omitempty"`
	AssetClass        *string  `json:"assetClass,omitempty"`
	Position          *float32 `json:"position,omitempty"`
	MktPrice          *float32 `json:"mktPrice,omitempty"`
	MktValue          *float32 `json:"mktValue,omitempty"`
	Currency          *string  `json:"currency,omitempty"`
	AvgCost           *float32 `json:"avgCost,omitempty"`
	AvgPrice          *float32 `json:"avgPrice,omitempty"`
	RealizedPnl       *float32 `json:"realizedPnl,omitempty"`
	UnrealizedPnl     *float32 `json:"unrealizedPnl,omitempty"`
	Exchs             *string  `json:"exchs,omitempty"`
	Expiry            *string  `json:"expiry,omitempty"`
	PutOrCall         *string  `json:"putOrCall,omitempty"`
	Multiplier        *float32 `json:"multiplier,omitempty"`
	Strike            *float32 `json:"strike,omitempty"`
	ExerciseStyle     *string  `json:"exerciseStyle,omitempty"`
	UndConid          *int32   `json:"undConid,omitempty"`
	ConExchMap        []string `json:"conExchMap,omitempty"`
	BaseMktValue      *float32 `json:"baseMktValue,omitempty"`
	BaseMktPrice      *float32 `json:"baseMktPrice,omitempty"`
	BaseAvgCost       *float32 `json:"baseAvgCost,omitempty"`
	BaseAvgPrice      *float32 `json:"baseAvgPrice,omitempty"`
	BaseRealizedPnl   *float32 `json:"baseRealizedPnl,omitempty"`
	BaseUnrealizedPnl *float32 `json:"baseUnrealizedPnl,omitempty"`
	Name              *string  `json:"name,omitempty"`
	LastTradingDay    *string  `json:"lastTradingDay,omitempty"`
	Group             *string  `json:"group,omitempty"`
	Sector            *string  `json:"sector,omitempty"`
	SectorGroup       *string  `json:"sectorGroup,omitempty"`
	Ticker            *string  `json:"ticker,omitempty"`
	UndComp           *string  `json:"undComp,omitempty"`
	UndSym            *string  `json:"undSym,omitempty"`
	FullName          *string  `json:"fullName,omitempty"`
	PageSize          *int32   `json:"pageSize,omitempty"`
	Model             *string  `json:"model,omitempty"`
}

// NewPositionInner instantiates a new PositionInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPositionInner() *PositionInner {
	this := PositionInner{}
	return &this
}

// NewPositionInnerWithDefaults instantiates a new PositionInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPositionInnerWithDefaults() *PositionInner {
	this := PositionInner{}
	return &this
}

// GetAcctId returns the AcctId field value if set, zero value otherwise.
func (o *PositionInner) GetAcctId() string {
	if o == nil || IsNil(o.AcctId) {
		var ret string
		return ret
	}
	return *o.AcctId
}

// GetAcctIdOk returns a tuple with the AcctId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetAcctIdOk() (*string, bool) {
	if o == nil || IsNil(o.AcctId) {
		return nil, false
	}
	return o.AcctId, true
}

// HasAcctId returns a boolean if a field has been set.
func (o *PositionInner) HasAcctId() bool {
	if o != nil && !IsNil(o.AcctId) {
		return true
	}

	return false
}

// SetAcctId gets a reference to the given string and assigns it to the AcctId field.
func (o *PositionInner) SetAcctId(v string) {
	o.AcctId = &v
}

// GetConid returns the Conid field value if set, zero value otherwise.
func (o *PositionInner) GetConid() int32 {
	if o == nil || IsNil(o.Conid) {
		var ret int32
		return ret
	}
	return *o.Conid
}

// GetConidOk returns a tuple with the Conid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetConidOk() (*int32, bool) {
	if o == nil || IsNil(o.Conid) {
		return nil, false
	}
	return o.Conid, true
}

// HasConid returns a boolean if a field has been set.
func (o *PositionInner) HasConid() bool {
	if o != nil && !IsNil(o.Conid) {
		return true
	}

	return false
}

// SetConid gets a reference to the given int32 and assigns it to the Conid field.
func (o *PositionInner) SetConid(v int32) {
	o.Conid = &v
}

// GetContractDesc returns the ContractDesc field value if set, zero value otherwise.
func (o *PositionInner) GetContractDesc() string {
	if o == nil || IsNil(o.ContractDesc) {
		var ret string
		return ret
	}
	return *o.ContractDesc
}

// GetContractDescOk returns a tuple with the ContractDesc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetContractDescOk() (*string, bool) {
	if o == nil || IsNil(o.ContractDesc) {
		return nil, false
	}
	return o.ContractDesc, true
}

// HasContractDesc returns a boolean if a field has been set.
func (o *PositionInner) HasContractDesc() bool {
	if o != nil && !IsNil(o.ContractDesc) {
		return true
	}

	return false
}

// SetContractDesc gets a reference to the given string and assigns it to the ContractDesc field.
func (o *PositionInner) SetContractDesc(v string) {
	o.ContractDesc = &v
}

// GetAssetClass returns the AssetClass field value if set, zero value otherwise.
func (o *PositionInner) GetAssetClass() string {
	if o == nil || IsNil(o.AssetClass) {
		var ret string
		return ret
	}
	return *o.AssetClass
}

// GetAssetClassOk returns a tuple with the AssetClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetAssetClassOk() (*string, bool) {
	if o == nil || IsNil(o.AssetClass) {
		return nil, false
	}
	return o.AssetClass, true
}

// HasAssetClass returns a boolean if a field has been set.
func (o *PositionInner) HasAssetClass() bool {
	if o != nil && !IsNil(o.AssetClass) {
		return true
	}

	return false
}

// SetAssetClass gets a reference to the given string and assigns it to the AssetClass field.
func (o *PositionInner) SetAssetClass(v string) {
	o.AssetClass = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *PositionInner) GetPosition() float32 {
	if o == nil || IsNil(o.Position) {
		var ret float32
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetPositionOk() (*float32, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *PositionInner) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given float32 and assigns it to the Position field.
func (o *PositionInner) SetPosition(v float32) {
	o.Position = &v
}

// GetMktPrice returns the MktPrice field value if set, zero value otherwise.
func (o *PositionInner) GetMktPrice() float32 {
	if o == nil || IsNil(o.MktPrice) {
		var ret float32
		return ret
	}
	return *o.MktPrice
}

// GetMktPriceOk returns a tuple with the MktPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetMktPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.MktPrice) {
		return nil, false
	}
	return o.MktPrice, true
}

// HasMktPrice returns a boolean if a field has been set.
func (o *PositionInner) HasMktPrice() bool {
	if o != nil && !IsNil(o.MktPrice) {
		return true
	}

	return false
}

// SetMktPrice gets a reference to the given float32 and assigns it to the MktPrice field.
func (o *PositionInner) SetMktPrice(v float32) {
	o.MktPrice = &v
}

// GetMktValue returns the MktValue field value if set, zero value otherwise.
func (o *PositionInner) GetMktValue() float32 {
	if o == nil || IsNil(o.MktValue) {
		var ret float32
		return ret
	}
	return *o.MktValue
}

// GetMktValueOk returns a tuple with the MktValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetMktValueOk() (*float32, bool) {
	if o == nil || IsNil(o.MktValue) {
		return nil, false
	}
	return o.MktValue, true
}

// HasMktValue returns a boolean if a field has been set.
func (o *PositionInner) HasMktValue() bool {
	if o != nil && !IsNil(o.MktValue) {
		return true
	}

	return false
}

// SetMktValue gets a reference to the given float32 and assigns it to the MktValue field.
func (o *PositionInner) SetMktValue(v float32) {
	o.MktValue = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *PositionInner) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *PositionInner) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *PositionInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetAvgCost returns the AvgCost field value if set, zero value otherwise.
func (o *PositionInner) GetAvgCost() float32 {
	if o == nil || IsNil(o.AvgCost) {
		var ret float32
		return ret
	}
	return *o.AvgCost
}

// GetAvgCostOk returns a tuple with the AvgCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetAvgCostOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgCost) {
		return nil, false
	}
	return o.AvgCost, true
}

// HasAvgCost returns a boolean if a field has been set.
func (o *PositionInner) HasAvgCost() bool {
	if o != nil && !IsNil(o.AvgCost) {
		return true
	}

	return false
}

// SetAvgCost gets a reference to the given float32 and assigns it to the AvgCost field.
func (o *PositionInner) SetAvgCost(v float32) {
	o.AvgCost = &v
}

// GetAvgPrice returns the AvgPrice field value if set, zero value otherwise.
func (o *PositionInner) GetAvgPrice() float32 {
	if o == nil || IsNil(o.AvgPrice) {
		var ret float32
		return ret
	}
	return *o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetAvgPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgPrice) {
		return nil, false
	}
	return o.AvgPrice, true
}

// HasAvgPrice returns a boolean if a field has been set.
func (o *PositionInner) HasAvgPrice() bool {
	if o != nil && !IsNil(o.AvgPrice) {
		return true
	}

	return false
}

// SetAvgPrice gets a reference to the given float32 and assigns it to the AvgPrice field.
func (o *PositionInner) SetAvgPrice(v float32) {
	o.AvgPrice = &v
}

// GetRealizedPnl returns the RealizedPnl field value if set, zero value otherwise.
func (o *PositionInner) GetRealizedPnl() float32 {
	if o == nil || IsNil(o.RealizedPnl) {
		var ret float32
		return ret
	}
	return *o.RealizedPnl
}

// GetRealizedPnlOk returns a tuple with the RealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetRealizedPnlOk() (*float32, bool) {
	if o == nil || IsNil(o.RealizedPnl) {
		return nil, false
	}
	return o.RealizedPnl, true
}

// HasRealizedPnl returns a boolean if a field has been set.
func (o *PositionInner) HasRealizedPnl() bool {
	if o != nil && !IsNil(o.RealizedPnl) {
		return true
	}

	return false
}

// SetRealizedPnl gets a reference to the given float32 and assigns it to the RealizedPnl field.
func (o *PositionInner) SetRealizedPnl(v float32) {
	o.RealizedPnl = &v
}

// GetUnrealizedPnl returns the UnrealizedPnl field value if set, zero value otherwise.
func (o *PositionInner) GetUnrealizedPnl() float32 {
	if o == nil || IsNil(o.UnrealizedPnl) {
		var ret float32
		return ret
	}
	return *o.UnrealizedPnl
}

// GetUnrealizedPnlOk returns a tuple with the UnrealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetUnrealizedPnlOk() (*float32, bool) {
	if o == nil || IsNil(o.UnrealizedPnl) {
		return nil, false
	}
	return o.UnrealizedPnl, true
}

// HasUnrealizedPnl returns a boolean if a field has been set.
func (o *PositionInner) HasUnrealizedPnl() bool {
	if o != nil && !IsNil(o.UnrealizedPnl) {
		return true
	}

	return false
}

// SetUnrealizedPnl gets a reference to the given float32 and assigns it to the UnrealizedPnl field.
func (o *PositionInner) SetUnrealizedPnl(v float32) {
	o.UnrealizedPnl = &v
}

// GetExchs returns the Exchs field value if set, zero value otherwise.
func (o *PositionInner) GetExchs() string {
	if o == nil || IsNil(o.Exchs) {
		var ret string
		return ret
	}
	return *o.Exchs
}

// GetExchsOk returns a tuple with the Exchs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetExchsOk() (*string, bool) {
	if o == nil || IsNil(o.Exchs) {
		return nil, false
	}
	return o.Exchs, true
}

// HasExchs returns a boolean if a field has been set.
func (o *PositionInner) HasExchs() bool {
	if o != nil && !IsNil(o.Exchs) {
		return true
	}

	return false
}

// SetExchs gets a reference to the given string and assigns it to the Exchs field.
func (o *PositionInner) SetExchs(v string) {
	o.Exchs = &v
}

// GetExpiry returns the Expiry field value if set, zero value otherwise.
func (o *PositionInner) GetExpiry() string {
	if o == nil || IsNil(o.Expiry) {
		var ret string
		return ret
	}
	return *o.Expiry
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.Expiry) {
		return nil, false
	}
	return o.Expiry, true
}

// HasExpiry returns a boolean if a field has been set.
func (o *PositionInner) HasExpiry() bool {
	if o != nil && !IsNil(o.Expiry) {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given string and assigns it to the Expiry field.
func (o *PositionInner) SetExpiry(v string) {
	o.Expiry = &v
}

// GetPutOrCall returns the PutOrCall field value if set, zero value otherwise.
func (o *PositionInner) GetPutOrCall() string {
	if o == nil || IsNil(o.PutOrCall) {
		var ret string
		return ret
	}
	return *o.PutOrCall
}

// GetPutOrCallOk returns a tuple with the PutOrCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetPutOrCallOk() (*string, bool) {
	if o == nil || IsNil(o.PutOrCall) {
		return nil, false
	}
	return o.PutOrCall, true
}

// HasPutOrCall returns a boolean if a field has been set.
func (o *PositionInner) HasPutOrCall() bool {
	if o != nil && !IsNil(o.PutOrCall) {
		return true
	}

	return false
}

// SetPutOrCall gets a reference to the given string and assigns it to the PutOrCall field.
func (o *PositionInner) SetPutOrCall(v string) {
	o.PutOrCall = &v
}

// GetMultiplier returns the Multiplier field value if set, zero value otherwise.
func (o *PositionInner) GetMultiplier() float32 {
	if o == nil || IsNil(o.Multiplier) {
		var ret float32
		return ret
	}
	return *o.Multiplier
}

// GetMultiplierOk returns a tuple with the Multiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetMultiplierOk() (*float32, bool) {
	if o == nil || IsNil(o.Multiplier) {
		return nil, false
	}
	return o.Multiplier, true
}

// HasMultiplier returns a boolean if a field has been set.
func (o *PositionInner) HasMultiplier() bool {
	if o != nil && !IsNil(o.Multiplier) {
		return true
	}

	return false
}

// SetMultiplier gets a reference to the given float32 and assigns it to the Multiplier field.
func (o *PositionInner) SetMultiplier(v float32) {
	o.Multiplier = &v
}

// GetStrike returns the Strike field value if set, zero value otherwise.
func (o *PositionInner) GetStrike() float32 {
	if o == nil || IsNil(o.Strike) {
		var ret float32
		return ret
	}
	return *o.Strike
}

// GetStrikeOk returns a tuple with the Strike field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetStrikeOk() (*float32, bool) {
	if o == nil || IsNil(o.Strike) {
		return nil, false
	}
	return o.Strike, true
}

// HasStrike returns a boolean if a field has been set.
func (o *PositionInner) HasStrike() bool {
	if o != nil && !IsNil(o.Strike) {
		return true
	}

	return false
}

// SetStrike gets a reference to the given float32 and assigns it to the Strike field.
func (o *PositionInner) SetStrike(v float32) {
	o.Strike = &v
}

// GetExerciseStyle returns the ExerciseStyle field value if set, zero value otherwise.
func (o *PositionInner) GetExerciseStyle() string {
	if o == nil || IsNil(o.ExerciseStyle) {
		var ret string
		return ret
	}
	return *o.ExerciseStyle
}

// GetExerciseStyleOk returns a tuple with the ExerciseStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetExerciseStyleOk() (*string, bool) {
	if o == nil || IsNil(o.ExerciseStyle) {
		return nil, false
	}
	return o.ExerciseStyle, true
}

// HasExerciseStyle returns a boolean if a field has been set.
func (o *PositionInner) HasExerciseStyle() bool {
	if o != nil && !IsNil(o.ExerciseStyle) {
		return true
	}

	return false
}

// SetExerciseStyle gets a reference to the given string and assigns it to the ExerciseStyle field.
func (o *PositionInner) SetExerciseStyle(v string) {
	o.ExerciseStyle = &v
}

// GetUndConid returns the UndConid field value if set, zero value otherwise.
func (o *PositionInner) GetUndConid() int32 {
	if o == nil || IsNil(o.UndConid) {
		var ret int32
		return ret
	}
	return *o.UndConid
}

// GetUndConidOk returns a tuple with the UndConid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetUndConidOk() (*int32, bool) {
	if o == nil || IsNil(o.UndConid) {
		return nil, false
	}
	return o.UndConid, true
}

// HasUndConid returns a boolean if a field has been set.
func (o *PositionInner) HasUndConid() bool {
	if o != nil && !IsNil(o.UndConid) {
		return true
	}

	return false
}

// SetUndConid gets a reference to the given int32 and assigns it to the UndConid field.
func (o *PositionInner) SetUndConid(v int32) {
	o.UndConid = &v
}

// GetConExchMap returns the ConExchMap field value if set, zero value otherwise.
func (o *PositionInner) GetConExchMap() []string {
	if o == nil || IsNil(o.ConExchMap) {
		var ret []string
		return ret
	}
	return o.ConExchMap
}

// GetConExchMapOk returns a tuple with the ConExchMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetConExchMapOk() ([]string, bool) {
	if o == nil || IsNil(o.ConExchMap) {
		return nil, false
	}
	return o.ConExchMap, true
}

// HasConExchMap returns a boolean if a field has been set.
func (o *PositionInner) HasConExchMap() bool {
	if o != nil && !IsNil(o.ConExchMap) {
		return true
	}

	return false
}

// SetConExchMap gets a reference to the given []string and assigns it to the ConExchMap field.
func (o *PositionInner) SetConExchMap(v []string) {
	o.ConExchMap = v
}

// GetBaseMktValue returns the BaseMktValue field value if set, zero value otherwise.
func (o *PositionInner) GetBaseMktValue() float32 {
	if o == nil || IsNil(o.BaseMktValue) {
		var ret float32
		return ret
	}
	return *o.BaseMktValue
}

// GetBaseMktValueOk returns a tuple with the BaseMktValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseMktValueOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseMktValue) {
		return nil, false
	}
	return o.BaseMktValue, true
}

// HasBaseMktValue returns a boolean if a field has been set.
func (o *PositionInner) HasBaseMktValue() bool {
	if o != nil && !IsNil(o.BaseMktValue) {
		return true
	}

	return false
}

// SetBaseMktValue gets a reference to the given float32 and assigns it to the BaseMktValue field.
func (o *PositionInner) SetBaseMktValue(v float32) {
	o.BaseMktValue = &v
}

// GetBaseMktPrice returns the BaseMktPrice field value if set, zero value otherwise.
func (o *PositionInner) GetBaseMktPrice() float32 {
	if o == nil || IsNil(o.BaseMktPrice) {
		var ret float32
		return ret
	}
	return *o.BaseMktPrice
}

// GetBaseMktPriceOk returns a tuple with the BaseMktPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseMktPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseMktPrice) {
		return nil, false
	}
	return o.BaseMktPrice, true
}

// HasBaseMktPrice returns a boolean if a field has been set.
func (o *PositionInner) HasBaseMktPrice() bool {
	if o != nil && !IsNil(o.BaseMktPrice) {
		return true
	}

	return false
}

// SetBaseMktPrice gets a reference to the given float32 and assigns it to the BaseMktPrice field.
func (o *PositionInner) SetBaseMktPrice(v float32) {
	o.BaseMktPrice = &v
}

// GetBaseAvgCost returns the BaseAvgCost field value if set, zero value otherwise.
func (o *PositionInner) GetBaseAvgCost() float32 {
	if o == nil || IsNil(o.BaseAvgCost) {
		var ret float32
		return ret
	}
	return *o.BaseAvgCost
}

// GetBaseAvgCostOk returns a tuple with the BaseAvgCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseAvgCostOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAvgCost) {
		return nil, false
	}
	return o.BaseAvgCost, true
}

// HasBaseAvgCost returns a boolean if a field has been set.
func (o *PositionInner) HasBaseAvgCost() bool {
	if o != nil && !IsNil(o.BaseAvgCost) {
		return true
	}

	return false
}

// SetBaseAvgCost gets a reference to the given float32 and assigns it to the BaseAvgCost field.
func (o *PositionInner) SetBaseAvgCost(v float32) {
	o.BaseAvgCost = &v
}

// GetBaseAvgPrice returns the BaseAvgPrice field value if set, zero value otherwise.
func (o *PositionInner) GetBaseAvgPrice() float32 {
	if o == nil || IsNil(o.BaseAvgPrice) {
		var ret float32
		return ret
	}
	return *o.BaseAvgPrice
}

// GetBaseAvgPriceOk returns a tuple with the BaseAvgPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseAvgPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseAvgPrice) {
		return nil, false
	}
	return o.BaseAvgPrice, true
}

// HasBaseAvgPrice returns a boolean if a field has been set.
func (o *PositionInner) HasBaseAvgPrice() bool {
	if o != nil && !IsNil(o.BaseAvgPrice) {
		return true
	}

	return false
}

// SetBaseAvgPrice gets a reference to the given float32 and assigns it to the BaseAvgPrice field.
func (o *PositionInner) SetBaseAvgPrice(v float32) {
	o.BaseAvgPrice = &v
}

// GetBaseRealizedPnl returns the BaseRealizedPnl field value if set, zero value otherwise.
func (o *PositionInner) GetBaseRealizedPnl() float32 {
	if o == nil || IsNil(o.BaseRealizedPnl) {
		var ret float32
		return ret
	}
	return *o.BaseRealizedPnl
}

// GetBaseRealizedPnlOk returns a tuple with the BaseRealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseRealizedPnlOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseRealizedPnl) {
		return nil, false
	}
	return o.BaseRealizedPnl, true
}

// HasBaseRealizedPnl returns a boolean if a field has been set.
func (o *PositionInner) HasBaseRealizedPnl() bool {
	if o != nil && !IsNil(o.BaseRealizedPnl) {
		return true
	}

	return false
}

// SetBaseRealizedPnl gets a reference to the given float32 and assigns it to the BaseRealizedPnl field.
func (o *PositionInner) SetBaseRealizedPnl(v float32) {
	o.BaseRealizedPnl = &v
}

// GetBaseUnrealizedPnl returns the BaseUnrealizedPnl field value if set, zero value otherwise.
func (o *PositionInner) GetBaseUnrealizedPnl() float32 {
	if o == nil || IsNil(o.BaseUnrealizedPnl) {
		var ret float32
		return ret
	}
	return *o.BaseUnrealizedPnl
}

// GetBaseUnrealizedPnlOk returns a tuple with the BaseUnrealizedPnl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetBaseUnrealizedPnlOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseUnrealizedPnl) {
		return nil, false
	}
	return o.BaseUnrealizedPnl, true
}

// HasBaseUnrealizedPnl returns a boolean if a field has been set.
func (o *PositionInner) HasBaseUnrealizedPnl() bool {
	if o != nil && !IsNil(o.BaseUnrealizedPnl) {
		return true
	}

	return false
}

// SetBaseUnrealizedPnl gets a reference to the given float32 and assigns it to the BaseUnrealizedPnl field.
func (o *PositionInner) SetBaseUnrealizedPnl(v float32) {
	o.BaseUnrealizedPnl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PositionInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PositionInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PositionInner) SetName(v string) {
	o.Name = &v
}

// GetLastTradingDay returns the LastTradingDay field value if set, zero value otherwise.
func (o *PositionInner) GetLastTradingDay() string {
	if o == nil || IsNil(o.LastTradingDay) {
		var ret string
		return ret
	}
	return *o.LastTradingDay
}

// GetLastTradingDayOk returns a tuple with the LastTradingDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetLastTradingDayOk() (*string, bool) {
	if o == nil || IsNil(o.LastTradingDay) {
		return nil, false
	}
	return o.LastTradingDay, true
}

// HasLastTradingDay returns a boolean if a field has been set.
func (o *PositionInner) HasLastTradingDay() bool {
	if o != nil && !IsNil(o.LastTradingDay) {
		return true
	}

	return false
}

// SetLastTradingDay gets a reference to the given string and assigns it to the LastTradingDay field.
func (o *PositionInner) SetLastTradingDay(v string) {
	o.LastTradingDay = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PositionInner) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PositionInner) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *PositionInner) SetGroup(v string) {
	o.Group = &v
}

// GetSector returns the Sector field value if set, zero value otherwise.
func (o *PositionInner) GetSector() string {
	if o == nil || IsNil(o.Sector) {
		var ret string
		return ret
	}
	return *o.Sector
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetSectorOk() (*string, bool) {
	if o == nil || IsNil(o.Sector) {
		return nil, false
	}
	return o.Sector, true
}

// HasSector returns a boolean if a field has been set.
func (o *PositionInner) HasSector() bool {
	if o != nil && !IsNil(o.Sector) {
		return true
	}

	return false
}

// SetSector gets a reference to the given string and assigns it to the Sector field.
func (o *PositionInner) SetSector(v string) {
	o.Sector = &v
}

// GetSectorGroup returns the SectorGroup field value if set, zero value otherwise.
func (o *PositionInner) GetSectorGroup() string {
	if o == nil || IsNil(o.SectorGroup) {
		var ret string
		return ret
	}
	return *o.SectorGroup
}

// GetSectorGroupOk returns a tuple with the SectorGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetSectorGroupOk() (*string, bool) {
	if o == nil || IsNil(o.SectorGroup) {
		return nil, false
	}
	return o.SectorGroup, true
}

// HasSectorGroup returns a boolean if a field has been set.
func (o *PositionInner) HasSectorGroup() bool {
	if o != nil && !IsNil(o.SectorGroup) {
		return true
	}

	return false
}

// SetSectorGroup gets a reference to the given string and assigns it to the SectorGroup field.
func (o *PositionInner) SetSectorGroup(v string) {
	o.SectorGroup = &v
}

// GetTicker returns the Ticker field value if set, zero value otherwise.
func (o *PositionInner) GetTicker() string {
	if o == nil || IsNil(o.Ticker) {
		var ret string
		return ret
	}
	return *o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetTickerOk() (*string, bool) {
	if o == nil || IsNil(o.Ticker) {
		return nil, false
	}
	return o.Ticker, true
}

// HasTicker returns a boolean if a field has been set.
func (o *PositionInner) HasTicker() bool {
	if o != nil && !IsNil(o.Ticker) {
		return true
	}

	return false
}

// SetTicker gets a reference to the given string and assigns it to the Ticker field.
func (o *PositionInner) SetTicker(v string) {
	o.Ticker = &v
}

// GetUndComp returns the UndComp field value if set, zero value otherwise.
func (o *PositionInner) GetUndComp() string {
	if o == nil || IsNil(o.UndComp) {
		var ret string
		return ret
	}
	return *o.UndComp
}

// GetUndCompOk returns a tuple with the UndComp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetUndCompOk() (*string, bool) {
	if o == nil || IsNil(o.UndComp) {
		return nil, false
	}
	return o.UndComp, true
}

// HasUndComp returns a boolean if a field has been set.
func (o *PositionInner) HasUndComp() bool {
	if o != nil && !IsNil(o.UndComp) {
		return true
	}

	return false
}

// SetUndComp gets a reference to the given string and assigns it to the UndComp field.
func (o *PositionInner) SetUndComp(v string) {
	o.UndComp = &v
}

// GetUndSym returns the UndSym field value if set, zero value otherwise.
func (o *PositionInner) GetUndSym() string {
	if o == nil || IsNil(o.UndSym) {
		var ret string
		return ret
	}
	return *o.UndSym
}

// GetUndSymOk returns a tuple with the UndSym field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetUndSymOk() (*string, bool) {
	if o == nil || IsNil(o.UndSym) {
		return nil, false
	}
	return o.UndSym, true
}

// HasUndSym returns a boolean if a field has been set.
func (o *PositionInner) HasUndSym() bool {
	if o != nil && !IsNil(o.UndSym) {
		return true
	}

	return false
}

// SetUndSym gets a reference to the given string and assigns it to the UndSym field.
func (o *PositionInner) SetUndSym(v string) {
	o.UndSym = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *PositionInner) GetFullName() string {
	if o == nil || IsNil(o.FullName) {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetFullNameOk() (*string, bool) {
	if o == nil || IsNil(o.FullName) {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *PositionInner) HasFullName() bool {
	if o != nil && !IsNil(o.FullName) {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *PositionInner) SetFullName(v string) {
	o.FullName = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *PositionInner) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *PositionInner) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *PositionInner) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *PositionInner) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PositionInner) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *PositionInner) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *PositionInner) SetModel(v string) {
	o.Model = &v
}

func (o PositionInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PositionInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcctId) {
		toSerialize["acctId"] = o.AcctId
	}
	if !IsNil(o.Conid) {
		toSerialize["conid"] = o.Conid
	}
	if !IsNil(o.ContractDesc) {
		toSerialize["contractDesc"] = o.ContractDesc
	}
	if !IsNil(o.AssetClass) {
		toSerialize["assetClass"] = o.AssetClass
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.MktPrice) {
		toSerialize["mktPrice"] = o.MktPrice
	}
	if !IsNil(o.MktValue) {
		toSerialize["mktValue"] = o.MktValue
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.AvgCost) {
		toSerialize["avgCost"] = o.AvgCost
	}
	if !IsNil(o.AvgPrice) {
		toSerialize["avgPrice"] = o.AvgPrice
	}
	if !IsNil(o.RealizedPnl) {
		toSerialize["realizedPnl"] = o.RealizedPnl
	}
	if !IsNil(o.UnrealizedPnl) {
		toSerialize["unrealizedPnl"] = o.UnrealizedPnl
	}
	if !IsNil(o.Exchs) {
		toSerialize["exchs"] = o.Exchs
	}
	if !IsNil(o.Expiry) {
		toSerialize["expiry"] = o.Expiry
	}
	if !IsNil(o.PutOrCall) {
		toSerialize["putOrCall"] = o.PutOrCall
	}
	if !IsNil(o.Multiplier) {
		toSerialize["multiplier"] = o.Multiplier
	}
	if !IsNil(o.Strike) {
		toSerialize["strike"] = o.Strike
	}
	if !IsNil(o.ExerciseStyle) {
		toSerialize["exerciseStyle"] = o.ExerciseStyle
	}
	if !IsNil(o.UndConid) {
		toSerialize["undConid"] = o.UndConid
	}
	if !IsNil(o.ConExchMap) {
		toSerialize["conExchMap"] = o.ConExchMap
	}
	if !IsNil(o.BaseMktValue) {
		toSerialize["baseMktValue"] = o.BaseMktValue
	}
	if !IsNil(o.BaseMktPrice) {
		toSerialize["baseMktPrice"] = o.BaseMktPrice
	}
	if !IsNil(o.BaseAvgCost) {
		toSerialize["baseAvgCost"] = o.BaseAvgCost
	}
	if !IsNil(o.BaseAvgPrice) {
		toSerialize["baseAvgPrice"] = o.BaseAvgPrice
	}
	if !IsNil(o.BaseRealizedPnl) {
		toSerialize["baseRealizedPnl"] = o.BaseRealizedPnl
	}
	if !IsNil(o.BaseUnrealizedPnl) {
		toSerialize["baseUnrealizedPnl"] = o.BaseUnrealizedPnl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.LastTradingDay) {
		toSerialize["lastTradingDay"] = o.LastTradingDay
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Sector) {
		toSerialize["sector"] = o.Sector
	}
	if !IsNil(o.SectorGroup) {
		toSerialize["sectorGroup"] = o.SectorGroup
	}
	if !IsNil(o.Ticker) {
		toSerialize["ticker"] = o.Ticker
	}
	if !IsNil(o.UndComp) {
		toSerialize["undComp"] = o.UndComp
	}
	if !IsNil(o.UndSym) {
		toSerialize["undSym"] = o.UndSym
	}
	if !IsNil(o.FullName) {
		toSerialize["fullName"] = o.FullName
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

type NullablePositionInner struct {
	value *PositionInner
	isSet bool
}

func (v NullablePositionInner) Get() *PositionInner {
	return v.value
}

func (v *NullablePositionInner) Set(val *PositionInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePositionInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePositionInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePositionInner(val *PositionInner) *NullablePositionInner {
	return &NullablePositionInner{value: val, isSet: true}
}

func (v NullablePositionInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePositionInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
