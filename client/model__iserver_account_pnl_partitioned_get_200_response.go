/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the IserverAccountPnlPartitionedGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IserverAccountPnlPartitionedGet200Response{}

// IserverAccountPnlPartitionedGet200Response struct for IserverAccountPnlPartitionedGet200Response
type IserverAccountPnlPartitionedGet200Response struct {
	AcctId map[string]interface{} `json:"acctId,omitempty"`
}

// NewIserverAccountPnlPartitionedGet200Response instantiates a new IserverAccountPnlPartitionedGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIserverAccountPnlPartitionedGet200Response() *IserverAccountPnlPartitionedGet200Response {
	this := IserverAccountPnlPartitionedGet200Response{}
	return &this
}

// NewIserverAccountPnlPartitionedGet200ResponseWithDefaults instantiates a new IserverAccountPnlPartitionedGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIserverAccountPnlPartitionedGet200ResponseWithDefaults() *IserverAccountPnlPartitionedGet200Response {
	this := IserverAccountPnlPartitionedGet200Response{}
	return &this
}

// GetAcctId returns the AcctId field value if set, zero value otherwise.
func (o *IserverAccountPnlPartitionedGet200Response) GetAcctId() map[string]interface{} {
	if o == nil || IsNil(o.AcctId) {
		var ret map[string]interface{}
		return ret
	}
	return o.AcctId
}

// GetAcctIdOk returns a tuple with the AcctId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IserverAccountPnlPartitionedGet200Response) GetAcctIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AcctId) {
		return map[string]interface{}{}, false
	}
	return o.AcctId, true
}

// HasAcctId returns a boolean if a field has been set.
func (o *IserverAccountPnlPartitionedGet200Response) HasAcctId() bool {
	if o != nil && !IsNil(o.AcctId) {
		return true
	}

	return false
}

// SetAcctId gets a reference to the given map[string]interface{} and assigns it to the AcctId field.
func (o *IserverAccountPnlPartitionedGet200Response) SetAcctId(v map[string]interface{}) {
	o.AcctId = v
}

func (o IserverAccountPnlPartitionedGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IserverAccountPnlPartitionedGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcctId) {
		toSerialize["acctId"] = o.AcctId
	}
	return toSerialize, nil
}

type NullableIserverAccountPnlPartitionedGet200Response struct {
	value *IserverAccountPnlPartitionedGet200Response
	isSet bool
}

func (v NullableIserverAccountPnlPartitionedGet200Response) Get() *IserverAccountPnlPartitionedGet200Response {
	return v.value
}

func (v *NullableIserverAccountPnlPartitionedGet200Response) Set(val *IserverAccountPnlPartitionedGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableIserverAccountPnlPartitionedGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableIserverAccountPnlPartitionedGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIserverAccountPnlPartitionedGet200Response(val *IserverAccountPnlPartitionedGet200Response) *NullableIserverAccountPnlPartitionedGet200Response {
	return &NullableIserverAccountPnlPartitionedGet200Response{value: val, isSet: true}
}

func (v NullableIserverAccountPnlPartitionedGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIserverAccountPnlPartitionedGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
