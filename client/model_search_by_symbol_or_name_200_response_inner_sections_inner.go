/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the SearchBySymbolOrName200ResponseInnerSectionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchBySymbolOrName200ResponseInnerSectionsInner{}

// SearchBySymbolOrName200ResponseInnerSectionsInner struct for SearchBySymbolOrName200ResponseInnerSectionsInner
type SearchBySymbolOrName200ResponseInnerSectionsInner struct {
	// Asset Class
	SecType *string `json:"secType,omitempty"`
	// List of expiration month(s) and year(s) in MMMYY format separated by semicolon
	Months *string `json:"months,omitempty"`
	// Underlying symbol
	Symbol *string `json:"symbol,omitempty"`
	// Listing Exchange
	Exchange *string `json:"exchange,omitempty"`
	// For combo's defines the asset class for each leg
	LegSecType *string `json:"legSecType,omitempty"`
}

// NewSearchBySymbolOrName200ResponseInnerSectionsInner instantiates a new SearchBySymbolOrName200ResponseInnerSectionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchBySymbolOrName200ResponseInnerSectionsInner() *SearchBySymbolOrName200ResponseInnerSectionsInner {
	this := SearchBySymbolOrName200ResponseInnerSectionsInner{}
	return &this
}

// NewSearchBySymbolOrName200ResponseInnerSectionsInnerWithDefaults instantiates a new SearchBySymbolOrName200ResponseInnerSectionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchBySymbolOrName200ResponseInnerSectionsInnerWithDefaults() *SearchBySymbolOrName200ResponseInnerSectionsInner {
	this := SearchBySymbolOrName200ResponseInnerSectionsInner{}
	return &this
}

// GetSecType returns the SecType field value if set, zero value otherwise.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetSecType() string {
	if o == nil || IsNil(o.SecType) {
		var ret string
		return ret
	}
	return *o.SecType
}

// GetSecTypeOk returns a tuple with the SecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetSecTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SecType) {
		return nil, false
	}
	return o.SecType, true
}

// HasSecType returns a boolean if a field has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) HasSecType() bool {
	if o != nil && !IsNil(o.SecType) {
		return true
	}

	return false
}

// SetSecType gets a reference to the given string and assigns it to the SecType field.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) SetSecType(v string) {
	o.SecType = &v
}

// GetMonths returns the Months field value if set, zero value otherwise.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetMonths() string {
	if o == nil || IsNil(o.Months) {
		var ret string
		return ret
	}
	return *o.Months
}

// GetMonthsOk returns a tuple with the Months field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetMonthsOk() (*string, bool) {
	if o == nil || IsNil(o.Months) {
		return nil, false
	}
	return o.Months, true
}

// HasMonths returns a boolean if a field has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) HasMonths() bool {
	if o != nil && !IsNil(o.Months) {
		return true
	}

	return false
}

// SetMonths gets a reference to the given string and assigns it to the Months field.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) SetMonths(v string) {
	o.Months = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) SetExchange(v string) {
	o.Exchange = &v
}

// GetLegSecType returns the LegSecType field value if set, zero value otherwise.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetLegSecType() string {
	if o == nil || IsNil(o.LegSecType) {
		var ret string
		return ret
	}
	return *o.LegSecType
}

// GetLegSecTypeOk returns a tuple with the LegSecType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) GetLegSecTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LegSecType) {
		return nil, false
	}
	return o.LegSecType, true
}

// HasLegSecType returns a boolean if a field has been set.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) HasLegSecType() bool {
	if o != nil && !IsNil(o.LegSecType) {
		return true
	}

	return false
}

// SetLegSecType gets a reference to the given string and assigns it to the LegSecType field.
func (o *SearchBySymbolOrName200ResponseInnerSectionsInner) SetLegSecType(v string) {
	o.LegSecType = &v
}

func (o SearchBySymbolOrName200ResponseInnerSectionsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchBySymbolOrName200ResponseInnerSectionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecType) {
		toSerialize["secType"] = o.SecType
	}
	if !IsNil(o.Months) {
		toSerialize["months"] = o.Months
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.LegSecType) {
		toSerialize["legSecType"] = o.LegSecType
	}
	return toSerialize, nil
}

type NullableSearchBySymbolOrName200ResponseInnerSectionsInner struct {
	value *SearchBySymbolOrName200ResponseInnerSectionsInner
	isSet bool
}

func (v NullableSearchBySymbolOrName200ResponseInnerSectionsInner) Get() *SearchBySymbolOrName200ResponseInnerSectionsInner {
	return v.value
}

func (v *NullableSearchBySymbolOrName200ResponseInnerSectionsInner) Set(val *SearchBySymbolOrName200ResponseInnerSectionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchBySymbolOrName200ResponseInnerSectionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchBySymbolOrName200ResponseInnerSectionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchBySymbolOrName200ResponseInnerSectionsInner(val *SearchBySymbolOrName200ResponseInnerSectionsInner) *NullableSearchBySymbolOrName200ResponseInnerSectionsInner {
	return &NullableSearchBySymbolOrName200ResponseInnerSectionsInner{value: val, isSet: true}
}

func (v NullableSearchBySymbolOrName200ResponseInnerSectionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchBySymbolOrName200ResponseInnerSectionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
