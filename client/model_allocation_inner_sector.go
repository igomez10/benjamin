/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AllocationInnerSector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocationInnerSector{}

// AllocationInnerSector portfolio allocation by sector
type AllocationInnerSector struct {
	Long  *AllocationInnerSectorLong  `json:"long,omitempty"`
	Short *AllocationInnerSectorShort `json:"short,omitempty"`
}

// NewAllocationInnerSector instantiates a new AllocationInnerSector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationInnerSector() *AllocationInnerSector {
	this := AllocationInnerSector{}
	return &this
}

// NewAllocationInnerSectorWithDefaults instantiates a new AllocationInnerSector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationInnerSectorWithDefaults() *AllocationInnerSector {
	this := AllocationInnerSector{}
	return &this
}

// GetLong returns the Long field value if set, zero value otherwise.
func (o *AllocationInnerSector) GetLong() AllocationInnerSectorLong {
	if o == nil || IsNil(o.Long) {
		var ret AllocationInnerSectorLong
		return ret
	}
	return *o.Long
}

// GetLongOk returns a tuple with the Long field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSector) GetLongOk() (*AllocationInnerSectorLong, bool) {
	if o == nil || IsNil(o.Long) {
		return nil, false
	}
	return o.Long, true
}

// HasLong returns a boolean if a field has been set.
func (o *AllocationInnerSector) HasLong() bool {
	if o != nil && !IsNil(o.Long) {
		return true
	}

	return false
}

// SetLong gets a reference to the given AllocationInnerSectorLong and assigns it to the Long field.
func (o *AllocationInnerSector) SetLong(v AllocationInnerSectorLong) {
	o.Long = &v
}

// GetShort returns the Short field value if set, zero value otherwise.
func (o *AllocationInnerSector) GetShort() AllocationInnerSectorShort {
	if o == nil || IsNil(o.Short) {
		var ret AllocationInnerSectorShort
		return ret
	}
	return *o.Short
}

// GetShortOk returns a tuple with the Short field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSector) GetShortOk() (*AllocationInnerSectorShort, bool) {
	if o == nil || IsNil(o.Short) {
		return nil, false
	}
	return o.Short, true
}

// HasShort returns a boolean if a field has been set.
func (o *AllocationInnerSector) HasShort() bool {
	if o != nil && !IsNil(o.Short) {
		return true
	}

	return false
}

// SetShort gets a reference to the given AllocationInnerSectorShort and assigns it to the Short field.
func (o *AllocationInnerSector) SetShort(v AllocationInnerSectorShort) {
	o.Short = &v
}

func (o AllocationInnerSector) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocationInnerSector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Long) {
		toSerialize["long"] = o.Long
	}
	if !IsNil(o.Short) {
		toSerialize["short"] = o.Short
	}
	return toSerialize, nil
}

type NullableAllocationInnerSector struct {
	value *AllocationInnerSector
	isSet bool
}

func (v NullableAllocationInnerSector) Get() *AllocationInnerSector {
	return v.value
}

func (v *NullableAllocationInnerSector) Set(val *AllocationInnerSector) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationInnerSector) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationInnerSector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationInnerSector(val *AllocationInnerSector) *NullableAllocationInnerSector {
	return &NullableAllocationInnerSector{value: val, isSet: true}
}

func (v NullableAllocationInnerSector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationInnerSector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
