/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the GetSecdefRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSecdefRequest{}

// GetSecdefRequest struct for GetSecdefRequest
type GetSecdefRequest struct {
	Conids []int32 `json:"conids,omitempty"`
}

// NewGetSecdefRequest instantiates a new GetSecdefRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSecdefRequest() *GetSecdefRequest {
	this := GetSecdefRequest{}
	return &this
}

// NewGetSecdefRequestWithDefaults instantiates a new GetSecdefRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSecdefRequestWithDefaults() *GetSecdefRequest {
	this := GetSecdefRequest{}
	return &this
}

// GetConids returns the Conids field value if set, zero value otherwise.
func (o *GetSecdefRequest) GetConids() []int32 {
	if o == nil || IsNil(o.Conids) {
		var ret []int32
		return ret
	}
	return o.Conids
}

// GetConidsOk returns a tuple with the Conids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSecdefRequest) GetConidsOk() ([]int32, bool) {
	if o == nil || IsNil(o.Conids) {
		return nil, false
	}
	return o.Conids, true
}

// HasConids returns a boolean if a field has been set.
func (o *GetSecdefRequest) HasConids() bool {
	if o != nil && !IsNil(o.Conids) {
		return true
	}

	return false
}

// SetConids gets a reference to the given []int32 and assigns it to the Conids field.
func (o *GetSecdefRequest) SetConids(v []int32) {
	o.Conids = v
}

func (o GetSecdefRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSecdefRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conids) {
		toSerialize["conids"] = o.Conids
	}
	return toSerialize, nil
}

type NullableGetSecdefRequest struct {
	value *GetSecdefRequest
	isSet bool
}

func (v NullableGetSecdefRequest) Get() *GetSecdefRequest {
	return v.value
}

func (v *NullableGetSecdefRequest) Set(val *GetSecdefRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSecdefRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSecdefRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSecdefRequest(val *GetSecdefRequest) *NullableGetSecdefRequest {
	return &NullableGetSecdefRequest{value: val, isSet: true}
}

func (v NullableGetSecdefRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSecdefRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
