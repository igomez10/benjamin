/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the AllocationInnerSectorShort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllocationInnerSectorShort{}

// AllocationInnerSectorShort short positions allocation
type AllocationInnerSectorShort struct {
	Industrial  *float32 `json:"Industrial,omitempty"`
	Consumer    *float32 `json:"Consumer,omitempty"`
	Diversified *float32 `json:"Diversified,omitempty"`
}

// NewAllocationInnerSectorShort instantiates a new AllocationInnerSectorShort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllocationInnerSectorShort() *AllocationInnerSectorShort {
	this := AllocationInnerSectorShort{}
	return &this
}

// NewAllocationInnerSectorShortWithDefaults instantiates a new AllocationInnerSectorShort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllocationInnerSectorShortWithDefaults() *AllocationInnerSectorShort {
	this := AllocationInnerSectorShort{}
	return &this
}

// GetIndustrial returns the Industrial field value if set, zero value otherwise.
func (o *AllocationInnerSectorShort) GetIndustrial() float32 {
	if o == nil || IsNil(o.Industrial) {
		var ret float32
		return ret
	}
	return *o.Industrial
}

// GetIndustrialOk returns a tuple with the Industrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorShort) GetIndustrialOk() (*float32, bool) {
	if o == nil || IsNil(o.Industrial) {
		return nil, false
	}
	return o.Industrial, true
}

// HasIndustrial returns a boolean if a field has been set.
func (o *AllocationInnerSectorShort) HasIndustrial() bool {
	if o != nil && !IsNil(o.Industrial) {
		return true
	}

	return false
}

// SetIndustrial gets a reference to the given float32 and assigns it to the Industrial field.
func (o *AllocationInnerSectorShort) SetIndustrial(v float32) {
	o.Industrial = &v
}

// GetConsumer returns the Consumer field value if set, zero value otherwise.
func (o *AllocationInnerSectorShort) GetConsumer() float32 {
	if o == nil || IsNil(o.Consumer) {
		var ret float32
		return ret
	}
	return *o.Consumer
}

// GetConsumerOk returns a tuple with the Consumer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorShort) GetConsumerOk() (*float32, bool) {
	if o == nil || IsNil(o.Consumer) {
		return nil, false
	}
	return o.Consumer, true
}

// HasConsumer returns a boolean if a field has been set.
func (o *AllocationInnerSectorShort) HasConsumer() bool {
	if o != nil && !IsNil(o.Consumer) {
		return true
	}

	return false
}

// SetConsumer gets a reference to the given float32 and assigns it to the Consumer field.
func (o *AllocationInnerSectorShort) SetConsumer(v float32) {
	o.Consumer = &v
}

// GetDiversified returns the Diversified field value if set, zero value otherwise.
func (o *AllocationInnerSectorShort) GetDiversified() float32 {
	if o == nil || IsNil(o.Diversified) {
		var ret float32
		return ret
	}
	return *o.Diversified
}

// GetDiversifiedOk returns a tuple with the Diversified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AllocationInnerSectorShort) GetDiversifiedOk() (*float32, bool) {
	if o == nil || IsNil(o.Diversified) {
		return nil, false
	}
	return o.Diversified, true
}

// HasDiversified returns a boolean if a field has been set.
func (o *AllocationInnerSectorShort) HasDiversified() bool {
	if o != nil && !IsNil(o.Diversified) {
		return true
	}

	return false
}

// SetDiversified gets a reference to the given float32 and assigns it to the Diversified field.
func (o *AllocationInnerSectorShort) SetDiversified(v float32) {
	o.Diversified = &v
}

func (o AllocationInnerSectorShort) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllocationInnerSectorShort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Industrial) {
		toSerialize["Industrial"] = o.Industrial
	}
	if !IsNil(o.Consumer) {
		toSerialize["Consumer"] = o.Consumer
	}
	if !IsNil(o.Diversified) {
		toSerialize["Diversified"] = o.Diversified
	}
	return toSerialize, nil
}

type NullableAllocationInnerSectorShort struct {
	value *AllocationInnerSectorShort
	isSet bool
}

func (v NullableAllocationInnerSectorShort) Get() *AllocationInnerSectorShort {
	return v.value
}

func (v *NullableAllocationInnerSectorShort) Set(val *AllocationInnerSectorShort) {
	v.value = val
	v.isSet = true
}

func (v NullableAllocationInnerSectorShort) IsSet() bool {
	return v.isSet
}

func (v *NullableAllocationInnerSectorShort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllocationInnerSectorShort(val *AllocationInnerSectorShort) *NullableAllocationInnerSectorShort {
	return &NullableAllocationInnerSectorShort{value: val, isSet: true}
}

func (v NullableAllocationInnerSectorShort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllocationInnerSectorShort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
