/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the CompleteCCP200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompleteCCP200Response{}

// CompleteCCP200Response struct for CompleteCCP200Response
type CompleteCCP200Response struct {
	// If sso authentication completed
	Passed *bool `json:"passed,omitempty"`
	// If connection is authenticated
	Authenticated *bool `json:"authenticated,omitempty"`
	// Connected to CCP session
	Connected *bool `json:"connected,omitempty"`
	// If user already has an existing brokerage session running.
	Competing *bool `json:"competing,omitempty"`
}

// NewCompleteCCP200Response instantiates a new CompleteCCP200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompleteCCP200Response() *CompleteCCP200Response {
	this := CompleteCCP200Response{}
	return &this
}

// NewCompleteCCP200ResponseWithDefaults instantiates a new CompleteCCP200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompleteCCP200ResponseWithDefaults() *CompleteCCP200Response {
	this := CompleteCCP200Response{}
	return &this
}

// GetPassed returns the Passed field value if set, zero value otherwise.
func (o *CompleteCCP200Response) GetPassed() bool {
	if o == nil || IsNil(o.Passed) {
		var ret bool
		return ret
	}
	return *o.Passed
}

// GetPassedOk returns a tuple with the Passed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteCCP200Response) GetPassedOk() (*bool, bool) {
	if o == nil || IsNil(o.Passed) {
		return nil, false
	}
	return o.Passed, true
}

// HasPassed returns a boolean if a field has been set.
func (o *CompleteCCP200Response) HasPassed() bool {
	if o != nil && !IsNil(o.Passed) {
		return true
	}

	return false
}

// SetPassed gets a reference to the given bool and assigns it to the Passed field.
func (o *CompleteCCP200Response) SetPassed(v bool) {
	o.Passed = &v
}

// GetAuthenticated returns the Authenticated field value if set, zero value otherwise.
func (o *CompleteCCP200Response) GetAuthenticated() bool {
	if o == nil || IsNil(o.Authenticated) {
		var ret bool
		return ret
	}
	return *o.Authenticated
}

// GetAuthenticatedOk returns a tuple with the Authenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteCCP200Response) GetAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Authenticated) {
		return nil, false
	}
	return o.Authenticated, true
}

// HasAuthenticated returns a boolean if a field has been set.
func (o *CompleteCCP200Response) HasAuthenticated() bool {
	if o != nil && !IsNil(o.Authenticated) {
		return true
	}

	return false
}

// SetAuthenticated gets a reference to the given bool and assigns it to the Authenticated field.
func (o *CompleteCCP200Response) SetAuthenticated(v bool) {
	o.Authenticated = &v
}

// GetConnected returns the Connected field value if set, zero value otherwise.
func (o *CompleteCCP200Response) GetConnected() bool {
	if o == nil || IsNil(o.Connected) {
		var ret bool
		return ret
	}
	return *o.Connected
}

// GetConnectedOk returns a tuple with the Connected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteCCP200Response) GetConnectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Connected) {
		return nil, false
	}
	return o.Connected, true
}

// HasConnected returns a boolean if a field has been set.
func (o *CompleteCCP200Response) HasConnected() bool {
	if o != nil && !IsNil(o.Connected) {
		return true
	}

	return false
}

// SetConnected gets a reference to the given bool and assigns it to the Connected field.
func (o *CompleteCCP200Response) SetConnected(v bool) {
	o.Connected = &v
}

// GetCompeting returns the Competing field value if set, zero value otherwise.
func (o *CompleteCCP200Response) GetCompeting() bool {
	if o == nil || IsNil(o.Competing) {
		var ret bool
		return ret
	}
	return *o.Competing
}

// GetCompetingOk returns a tuple with the Competing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompleteCCP200Response) GetCompetingOk() (*bool, bool) {
	if o == nil || IsNil(o.Competing) {
		return nil, false
	}
	return o.Competing, true
}

// HasCompeting returns a boolean if a field has been set.
func (o *CompleteCCP200Response) HasCompeting() bool {
	if o != nil && !IsNil(o.Competing) {
		return true
	}

	return false
}

// SetCompeting gets a reference to the given bool and assigns it to the Competing field.
func (o *CompleteCCP200Response) SetCompeting(v bool) {
	o.Competing = &v
}

func (o CompleteCCP200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompleteCCP200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Passed) {
		toSerialize["passed"] = o.Passed
	}
	if !IsNil(o.Authenticated) {
		toSerialize["authenticated"] = o.Authenticated
	}
	if !IsNil(o.Connected) {
		toSerialize["connected"] = o.Connected
	}
	if !IsNil(o.Competing) {
		toSerialize["competing"] = o.Competing
	}
	return toSerialize, nil
}

type NullableCompleteCCP200Response struct {
	value *CompleteCCP200Response
	isSet bool
}

func (v NullableCompleteCCP200Response) Get() *CompleteCCP200Response {
	return v.value
}

func (v *NullableCompleteCCP200Response) Set(val *CompleteCCP200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCompleteCCP200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCompleteCCP200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompleteCCP200Response(val *CompleteCCP200Response) *NullableCompleteCCP200Response {
	return &NullableCompleteCCP200Response{value: val, isSet: true}
}

func (v NullableCompleteCCP200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompleteCCP200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
