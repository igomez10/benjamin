/*
Client Portal Web API

Client Poral Web API

API version: 1.0.0
Contact: e@e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the PerformanceTpps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PerformanceTpps{}

// PerformanceTpps Time period performance data
type PerformanceTpps struct {
	// array of dates, the length should be same as the length of returns inside data.
	Dates []string `json:"dates,omitempty"`
	// M means Month
	Freq *string                   `json:"freq,omitempty"`
	Data []PerformanceCpsDataInner `json:"data,omitempty"`
}

// NewPerformanceTpps instantiates a new PerformanceTpps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPerformanceTpps() *PerformanceTpps {
	this := PerformanceTpps{}
	return &this
}

// NewPerformanceTppsWithDefaults instantiates a new PerformanceTpps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPerformanceTppsWithDefaults() *PerformanceTpps {
	this := PerformanceTpps{}
	return &this
}

// GetDates returns the Dates field value if set, zero value otherwise.
func (o *PerformanceTpps) GetDates() []string {
	if o == nil || IsNil(o.Dates) {
		var ret []string
		return ret
	}
	return o.Dates
}

// GetDatesOk returns a tuple with the Dates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceTpps) GetDatesOk() ([]string, bool) {
	if o == nil || IsNil(o.Dates) {
		return nil, false
	}
	return o.Dates, true
}

// HasDates returns a boolean if a field has been set.
func (o *PerformanceTpps) HasDates() bool {
	if o != nil && !IsNil(o.Dates) {
		return true
	}

	return false
}

// SetDates gets a reference to the given []string and assigns it to the Dates field.
func (o *PerformanceTpps) SetDates(v []string) {
	o.Dates = v
}

// GetFreq returns the Freq field value if set, zero value otherwise.
func (o *PerformanceTpps) GetFreq() string {
	if o == nil || IsNil(o.Freq) {
		var ret string
		return ret
	}
	return *o.Freq
}

// GetFreqOk returns a tuple with the Freq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceTpps) GetFreqOk() (*string, bool) {
	if o == nil || IsNil(o.Freq) {
		return nil, false
	}
	return o.Freq, true
}

// HasFreq returns a boolean if a field has been set.
func (o *PerformanceTpps) HasFreq() bool {
	if o != nil && !IsNil(o.Freq) {
		return true
	}

	return false
}

// SetFreq gets a reference to the given string and assigns it to the Freq field.
func (o *PerformanceTpps) SetFreq(v string) {
	o.Freq = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PerformanceTpps) GetData() []PerformanceCpsDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []PerformanceCpsDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PerformanceTpps) GetDataOk() ([]PerformanceCpsDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PerformanceTpps) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []PerformanceCpsDataInner and assigns it to the Data field.
func (o *PerformanceTpps) SetData(v []PerformanceCpsDataInner) {
	o.Data = v
}

func (o PerformanceTpps) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PerformanceTpps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Dates) {
		toSerialize["dates"] = o.Dates
	}
	if !IsNil(o.Freq) {
		toSerialize["freq"] = o.Freq
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePerformanceTpps struct {
	value *PerformanceTpps
	isSet bool
}

func (v NullablePerformanceTpps) Get() *PerformanceTpps {
	return v.value
}

func (v *NullablePerformanceTpps) Set(val *PerformanceTpps) {
	v.value = val
	v.isSet = true
}

func (v NullablePerformanceTpps) IsSet() bool {
	return v.isSet
}

func (v *NullablePerformanceTpps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePerformanceTpps(val *PerformanceTpps) *NullablePerformanceTpps {
	return &NullablePerformanceTpps{value: val, isSet: true}
}

func (v NullablePerformanceTpps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePerformanceTpps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
